{"version":3,"sources":["webpack:///./src/templates/blog-list.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./src/utils/typography.js","webpack:///./src/components/layout.tsx","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/assets/moon.svg","webpack:///./src/assets/cloudy.svg","webpack:///./src/assets/profile.jpeg","webpack:///./src/components/BlogCard.tsx"],"names":["BlogList","render","posts","this","props","data","allMarkdownRemark","edges","Object","_emotion_core__WEBPACK_IMPORTED_MODULE_0__","_components_layout__WEBPACK_IMPORTED_MODULE_2__","map","_ref","node","_components_BlogCard__WEBPACK_IMPORTED_MODULE_3__","key","id","post","React","Component","blogListQuery","StaticQueryContext","createContext","StaticQueryDataRenderer","staticQueryData","query","finalData","react__WEBPACK_IMPORTED_MODULE_1___default","a","Fragment","StaticQuery","children","Consumer","propTypes","PropTypes","object","string","isRequired","func","m","module","exports","require","default","__webpack_require__","d","__webpack_exports__","rhythm","typography__WEBPACK_IMPORTED_MODULE_0__","systemFontStack","typography","n","Typography","headerFontFamily","bodyFontFamily","Layout","_ref2","gatsby__WEBPACK_IMPORTED_MODULE_3__","_data$site$siteMetada","site","siteMetadata","social","medium","github","gatsby_plugin_dark_mode__WEBPACK_IMPORTED_MODULE_4__","_ref3","theme","toggleTheme","react__WEBPACK_IMPORTED_MODULE_2___default","css","to","href","target","rel","src","profileImage","sun","moon","onClick","_public_static_d_32839212_json__WEBPACK_IMPORTED_MODULE_1__","ProdPageRenderer","location","pageResources","createElement","InternalPageRenderer","assign","json","shape","pathname","p","BlogCard","_ref5","_emotion_core__WEBPACK_IMPORTED_MODULE_1__","fields","slug","frontmatter","title","date","tags","tag","_ref4","cover","publicURL","alt","name","excerpt"],"mappings":"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","file":"component---src-templates-blog-list-js-038d007d3adcbede70db.js","sourcesContent":["import React from 'react'\nimport { graphql } from 'gatsby'\nimport Layout from '../components/layout'\nimport BlogCard from '../components/BlogCard'\n\nexport default class BlogList extends React.Component {\n  render() {\n    const posts = this.props.data.allMarkdownRemark.edges\n    return (\n      <Layout>\n        {posts.map(({ node }) => (\n          <BlogCard key={node.id} post={node} />\n        ))}\n      </Layout>\n    )\n  }\n}\n\nexport const blogListQuery = graphql`\n  query blogListQuery($skip: Int!, $limit: Int!) {\n    allMarkdownRemark(\n      sort: { fields: [frontmatter___date], order: DESC }\n      limit: $limit\n      skip: $skip\n    ) {\n      edges {\n        node {\n          id\n          frontmatter {\n            title\n            cover {\n              name\n              publicURL\n            }\n            date(formatString: \"DD MMMM, YYYY\")\n            tags\n          }\n          fields {\n            slug\n          }\n          excerpt(truncate: true, pruneLength: 250)\n        }\n      }\n    }\n  }\n`\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nfunction StaticQueryDataRenderer({ staticQueryData, data, query, render }) {\n  const finalData = data\n    ? data.data\n    : staticQueryData[query] && staticQueryData[query].data\n\n  return (\n    <React.Fragment>\n      {finalData && render(finalData)}\n      {!finalData && <div>Loading (StaticQuery)</div>}\n    </React.Fragment>\n  )\n}\n\nconst StaticQuery = props => {\n  const { data, query, render, children } = props\n\n  return (\n    <StaticQueryContext.Consumer>\n      {staticQueryData => (\n        <StaticQueryDataRenderer\n          data={data}\n          query={query}\n          render={render || children}\n          staticQueryData={staticQueryData}\n        />\n      )}\n    </StaticQueryContext.Consumer>\n  )\n}\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import Typography from 'typography'\n\nconst systemFontStack = [\n  '-apple-system',\n  'BlinkMacSystemFont',\n  'Segoe UI',\n  'Roboto',\n  'Oxygen-Sans',\n  'Ubuntu',\n  'Cantarell',\n  'Helvetica Neue',\n  'Helvetica',\n  'Arial',\n  'sans-serif',\n]\n\nconst typography = new Typography({\n  headerFontFamily: systemFontStack,\n  bodyFontFamily: systemFontStack,\n})\n\nexport default typography\nexport const rhythm = typography.rhythm\n","import React from 'react'\nimport { css } from '@emotion/core'\nimport { Link, graphql, StaticQuery } from 'gatsby'\nimport { ThemeToggler } from 'gatsby-plugin-dark-mode'\n\nimport { rhythm } from '../utils/typography'\nimport moon from '../assets/moon.svg'\nimport sun from '../assets/cloudy.svg'\nimport profileImage from '../assets/profile.jpeg'\n\nfunction Layout({ children }) {\n  return (\n    <StaticQuery\n      query={graphql`\n        query {\n          site {\n            siteMetadata {\n              social {\n                github\n                medium\n              }\n            }\n          }\n        }\n      `}\n      render={data => {\n        const { medium, github } = data.site.siteMetadata.social\n        return (\n          <ThemeToggler>\n            {({ theme, toggleTheme }) => {\n              return (\n                <>\n                  <div\n                    css={css`\n                      margin: 0 auto;\n                      max-width: 700px;\n                      padding: ${rhythm(1)};\n                      text-align: right;\n                    `}\n                  >\n                    <Link\n                      css={css`\n                        text-decoration: none;\n                        margin-left: ${rhythm(0.5)};\n                      `}\n                      to={`/`}\n                    >\n                      Home\n                    </Link>\n                    <a\n                      css={css`\n                        text-decoration: none;\n                        margin-left: ${rhythm(0.5)};\n                      `}\n                      href={medium}\n                      target=\"_blank\"\n                      rel=\"noopener noreferrer\"\n                    >\n                      Medium\n                    </a>\n                    <a\n                      css={css`\n                        text-decoration: none;\n                        margin-left: ${rhythm(0.5)};\n                      `}\n                      href={github}\n                      target=\"_blank\"\n                      rel=\"noopener noreferrer\"\n                    >\n                      GitHub\n                    </a>\n                    <Link\n                      to={`/about/`}\n                      css={css`\n                        text-decoration: none;\n                        margin-left: ${rhythm(0.5)};\n                      `}\n                    >\n                      <img\n                        src={profileImage}\n                        css={css`\n                          width: 25px;\n                          vertical-align: bottom;\n                          margin-bottom: 0;\n                          border-radius: 50%;\n                          border: 1px solid grey;\n                        `}\n                      />\n                    </Link>\n                    <img\n                      src={theme === 'dark' ? sun : moon}\n                      css={css`\n                        display: inline-block;\n                        cursor: pointer;\n                        width: 25px;\n                        vertical-align: bottom;\n                        margin-bottom: 0;\n                        margin-left: ${rhythm(0.5)};\n                      `}\n                      onClick={() =>\n                        toggleTheme(theme === 'dark' ? 'light' : 'dark')\n                      }\n                    />\n                  </div>\n                  <div\n                    css={css`\n                      margin: 0 auto;\n                      max-width: 700px;\n                      padding: ${rhythm(2)} ${rhythm(1)};\n                    `}\n                  >\n                    {children}\n                  </div>\n                </>\n              )\n            }}\n          </ThemeToggler>\n        )\n      }}\n    />\n  )\n}\n\nexport default Layout\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\n\nconst ProdPageRenderer = ({ location, pageResources }) => {\n  if (!pageResources) {\n    return null\n  }\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","module.exports = __webpack_public_path__ + \"static/moon-e69b44d409556483a5b36e82531126ec.svg\";","module.exports = __webpack_public_path__ + \"static/cloudy-1259b6d43da52a09b23caf706893e3f8.svg\";","module.exports = __webpack_public_path__ + \"static/profile-befb6be9201f7a8d55c330958e5c5820.jpeg\";","import React from 'react'\nimport { css } from '@emotion/core'\nimport { Link } from 'gatsby'\n\nimport { rhythm } from '../utils/typography'\n\nconst BlogCard = ({ post }) => {\n  return (\n    <div\n      css={css`\n        margin-bottom: ${rhythm(2)};\n      `}\n    >\n      <Link\n        css={css`\n          text-decoration: none;\n          color: inherit;\n        `}\n        to={post.fields.slug}\n      >\n        <h1\n          css={css`\n            margin-bottom: ${rhythm(1 / 2)};\n          `}\n        >\n          {post.frontmatter.title}\n        </h1>\n      </Link>\n      <p\n        css={css`\n          color: #bbb;\n        `}\n      >\n        {post.frontmatter.date}\n        <span\n          css={css`\n            padding: 0 ${rhythm(1 / 2)};\n          `}\n        >\n          |\n        </span>\n        {post.frontmatter.tags.map(tag => (\n          <Link\n            key={tag}\n            to={`/tags/${tag}`}\n            css={css`\n              text-decoration: none;\n              color: inherit;\n            `}\n          >\n            <span>{tag}</span>\n          </Link>\n        ))}\n      </p>\n      <Link\n        css={css`\n          text-decoration: none;\n          color: inherit;\n        `}\n        to={post.fields.slug}\n      >\n        {post.frontmatter.cover && (\n          <img\n            src={post.frontmatter.cover.publicURL}\n            alt={post.frontmatter.cover.name}\n          />\n        )}\n        <p>{post.excerpt}</p>\n      </Link>\n    </div>\n  )\n}\n\nexport default BlogCard\n"],"sourceRoot":""}