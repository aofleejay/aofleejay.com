{"version":3,"sources":["webpack:///./src/pages/about.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./src/utils/typography.js","webpack:///./src/components/layout.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/seo.js"],"names":["__webpack_require__","r","__webpack_exports__","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_components_layout__WEBPACK_IMPORTED_MODULE_1__","_components_seo__WEBPACK_IMPORTED_MODULE_2__","About","a","createElement","role","aria-label","href","d","graphql","StaticQueryContext","StaticQuery","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","_public_page_renderer__WEBPACK_IMPORTED_MODULE_3__","_public_page_renderer__WEBPACK_IMPORTED_MODULE_3___default","_parse_path__WEBPACK_IMPORTED_MODULE_4__","React","createContext","props","Consumer","staticQueryData","data","query","render","children","Error","propTypes","PropTypes","object","string","isRequired","func","m","module","exports","require","default","rhythm","typography__WEBPACK_IMPORTED_MODULE_0__","typography__WEBPACK_IMPORTED_MODULE_0___default","typography_theme_github__WEBPACK_IMPORTED_MODULE_1__","typography_theme_github__WEBPACK_IMPORTED_MODULE_1___default","typography","Typography","githubTheme","gatsby__WEBPACK_IMPORTED_MODULE_1__","_utils_typography__WEBPACK_IMPORTED_MODULE_2__","Layout","_ref","style","margin","maxWidth","padding","paddingTop","marginBottom","to","float","ProdPageRenderer","location","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","Object","assign","json","shape","SEO","description","lang","meta","keywords","title","react__WEBPACK_IMPORTED_MODULE_1___default","gatsby__WEBPACK_IMPORTED_MODULE_4__","detailsQuery","metaDescription","site","siteMetadata","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","titleTemplate","defaultTitle","name","content","property","author","concat","length","join","_public_static_d_1025518380_json__WEBPACK_IMPORTED_MODULE_0__","defaultProps","undefined","array","arrayOf"],"mappings":"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","file":"component---src-pages-about-js-2e6e2a093d396af14999.js","sourcesContent":["import React from 'react'\n\nimport Layout from '../components/layout'\nimport SEO from '../components/seo'\n\nconst About = () => (\n  <Layout>\n    <SEO />\n    <h1>About</h1> \n    <h2>Kunapot Pairat</h2>\n    <p><span role=\"img\" aria-label=\"computer\">💻</span> Software Developer / <span role=\"img\" aria-label=\"runner\">🏃</span> Slow Runner / <span role=\"img\" aria-label=\"cat\">🐱</span> Pokemon Trainer / <span role=\"img\" aria-label=\"lovely-cat\">😻</span> Cat Lover / <span role=\"img\" aria-label=\"guitar\">🎸</span> Guitar Player</p>\n    <p>Medium - <a href=\"https://medium.com/@aofleejay\">https://medium.com/@aofleejay</a></p>\n    <p>Github - <a href=\"https://github.com/aofleejay\">https://github.com/aofleejay</a></p>\n  </Layout>\n)\n\nexport default About\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport parsePath from \"./parse-path\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import Typography from 'typography'\nimport githubTheme from 'typography-theme-github'\n\nconst typography = new Typography(githubTheme)\nconst rhythm = typography.rhythm\n\nexport { rhythm }\nexport default typography\n","import React from 'react'\nimport { Link } from 'gatsby'\n\nimport { rhythm } from '../utils/typography'\n\nconst Layout = ({ children }) => (\n  <div\n    style={{\n      margin: '0 auto',\n      maxWidth: 700,\n      padding: rhythm(2),\n      paddingTop: rhythm(1.5),\n    }}\n  >\n    <header style={{ marginBottom: '1.5rem' }}>\n      <Link to=\"/\">\n        Home\n      </Link>\n      <Link\n        to=\"/about/\"\n        style={{ float: 'right' }}\n      >\n        About\n      </Link>\n    </header>\n    {children}\n  </div>\n)\n\nexport default Layout\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport Helmet from 'react-helmet'\nimport { StaticQuery, graphql } from 'gatsby'\n\nfunction SEO({ description, lang, meta, keywords, title }) {\n  return (\n    <StaticQuery\n      query={detailsQuery}\n      render={data => {\n        const metaDescription =\n          description || data.site.siteMetadata.description\n        return (\n          <Helmet\n            htmlAttributes={{\n              lang,\n            }}\n            title={title}\n            titleTemplate={`%s - ${data.site.siteMetadata.title}`}\n            defaultTitle={`${data.site.siteMetadata.title} - ${data.site.siteMetadata.description}`}\n            meta={[\n              {\n                name: `description`,\n                content: metaDescription,\n              },\n              {\n                property: `og:title`,\n                content: title,\n              },\n              {\n                property: `og:description`,\n                content: metaDescription,\n              },\n              {\n                property: `og:type`,\n                content: `website`,\n              },\n              {\n                name: `twitter:card`,\n                content: `summary`,\n              },\n              {\n                name: `twitter:creator`,\n                content: data.site.siteMetadata.author,\n              },\n              {\n                name: `twitter:title`,\n                content: title,\n              },\n              {\n                name: `twitter:description`,\n                content: metaDescription,\n              },\n            ]\n              .concat(\n                keywords.length > 0\n                  ? {\n                      name: `keywords`,\n                      content: keywords.join(`, `),\n                    }\n                  : []\n              )\n              .concat(meta)}\n          />\n        )\n      }}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  description: undefined,\n  lang: `th`,\n  meta: [],\n  keywords: [],\n  title: undefined,\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.array,\n  keywords: PropTypes.arrayOf(PropTypes.string),\n  title: PropTypes.string,\n}\n\nexport default SEO\n\nconst detailsQuery = graphql`\n  query DefaultSEOQuery {\n    site {\n      siteMetadata {\n        title\n        description\n        author\n      }\n    }\n  }\n`\n"],"sourceRoot":""}