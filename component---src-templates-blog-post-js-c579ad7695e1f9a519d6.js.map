{"version":3,"sources":["webpack:///./src/templates/blog-post.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./src/utils/typography.js","webpack:///./src/components/layout.tsx","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/seo.tsx"],"names":["query","BlogPost","_ref","post","data","markdownRemark","Object","_emotion_core__WEBPACK_IMPORTED_MODULE_1__","_components_layout__WEBPACK_IMPORTED_MODULE_3__","_components_seo__WEBPACK_IMPORTED_MODULE_4__","title","frontmatter","description","keywords","tags","image","cover","publicURL","article","src","alt","name","dangerouslySetInnerHTML","__html","html","StaticQueryContext","React","createContext","StaticQueryDataRenderer","staticQueryData","render","finalData","_emotion_core__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_1___default","a","Fragment","StaticQuery","props","children","Consumer","propTypes","PropTypes","object","string","isRequired","func","m","module","exports","require","default","__webpack_require__","d","__webpack_exports__","rhythm","typography__WEBPACK_IMPORTED_MODULE_0__","systemFontStack","typography","n","Typography","headerFontFamily","bodyFontFamily","_ref6","className","css","gatsby__WEBPACK_IMPORTED_MODULE_2__","_ref2","to","_ref3","_ref4","href","target","rel","_ref5","ProdPageRenderer","location","pageResources","createElement","InternalPageRenderer","assign","json","shape","pathname","SEO","gatsby__WEBPACK_IMPORTED_MODULE_4__","site","siteMetadata","author","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","content","join","property","_public_static_d_580542714_json__WEBPACK_IMPORTED_MODULE_1__","defaultProps"],"mappings":"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","file":"component---src-templates-blog-post-js-c579ad7695e1f9a519d6.js","sourcesContent":["import React from 'react'\nimport { graphql } from 'gatsby'\n\nimport Layout from '../components/layout'\nimport SEO from '../components/seo'\n\nconst BlogPost = ({ data }) => {\n  const post = data.markdownRemark\n  return (\n    <Layout>\n      <SEO\n        title={post.frontmatter.title}\n        description={post.frontmatter.description}\n        keywords={post.frontmatter.tags}\n        image={post.frontmatter.cover.publicURL}\n        article\n      />\n      <div>\n        <h1>{post.frontmatter.title}</h1>\n        {post.frontmatter.cover && (\n          <img\n            src={post.frontmatter.cover.publicURL}\n            alt={post.frontmatter.cover.name}\n          />\n        )}\n        <div dangerouslySetInnerHTML={{ __html: post.html }} />\n      </div>\n    </Layout>\n  )\n}\n\nexport const query = graphql`\n  query($slug: String!) {\n    markdownRemark(fields: { slug: { eq: $slug } }) {\n      html\n      frontmatter {\n        title\n        description\n        tags\n        cover {\n          name\n          publicURL\n        }\n      }\n    }\n  }\n`\n\nexport default BlogPost\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nfunction StaticQueryDataRenderer({ staticQueryData, data, query, render }) {\n  const finalData = data\n    ? data.data\n    : staticQueryData[query] && staticQueryData[query].data\n\n  return (\n    <React.Fragment>\n      {finalData && render(finalData)}\n      {!finalData && <div>Loading (StaticQuery)</div>}\n    </React.Fragment>\n  )\n}\n\nconst StaticQuery = props => {\n  const { data, query, render, children } = props\n\n  return (\n    <StaticQueryContext.Consumer>\n      {staticQueryData => (\n        <StaticQueryDataRenderer\n          data={data}\n          query={query}\n          render={render || children}\n          staticQueryData={staticQueryData}\n        />\n      )}\n    </StaticQueryContext.Consumer>\n  )\n}\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import Typography from 'typography'\n\nconst systemFontStack = [\n  '-apple-system',\n  'BlinkMacSystemFont',\n  'Segoe UI',\n  'Roboto',\n  'Oxygen-Sans',\n  'Ubuntu',\n  'Cantarell',\n  'Helvetica Neue',\n  'Helvetica',\n  'Arial',\n  'sans-serif',\n]\n\nconst typography = new Typography({\n  headerFontFamily: systemFontStack,\n  bodyFontFamily: systemFontStack,\n})\n\nexport default typography\nexport const rhythm = typography.rhythm\n","import React from 'react'\nimport { css } from '@emotion/core'\nimport { Link } from 'gatsby'\n\nimport { rhythm } from '../utils/typography'\n\nexport default ({ children }) => (\n  <>\n    <div\n      className=\"asdasdasd\"\n      css={css`\n        background-color: salmon;\n      `}\n    >\n      <div\n        css={css`\n          margin: 0 auto;\n          max-width: 700px;\n          padding: ${rhythm(1)};\n        `}\n      >\n        <Link\n          css={css`\n            color: #ffffff;\n            text-decoration: none;\n          `}\n          to={`/`}\n        >\n          HOME\n        </Link>\n        <div\n          css={css`\n            float: right;\n\n            @media only screen and (max-width: 320px) {\n              float: none;\n            }\n          `}\n        >\n          <a\n            css={css`\n              color: #ffffff;\n              text-decoration: none;\n            `}\n            href=\"https://medium.com/@aofleejay/latest\"\n            target=\"_blank\"\n            rel=\"noopener noreferrer\"\n          >\n            SOFTWARE DEVELOPMENT\n          </a>\n          <span\n            css={css`\n              padding: 0 ${rhythm(0.5)};\n              color: #ffffff;\n            `}\n          >\n            |\n          </span>\n          <Link\n            to={`/about/`}\n            css={css`\n              color: #ffffff;\n              text-decoration: none;\n            `}\n          >\n            ABOUT\n          </Link>\n        </div>\n      </div>\n    </div>\n    <div>\n      <div\n        css={css`\n          margin: 0 auto;\n          max-width: 700px;\n          padding: ${rhythm(2)} ${rhythm(1)};\n        `}\n      >\n        {children}\n      </div>\n    </div>\n  </>\n)\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\n\nconst ProdPageRenderer = ({ location, pageResources }) => {\n  if (!pageResources) {\n    return null\n  }\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import React from 'react'\nimport Helmet from 'react-helmet'\nimport { StaticQuery, graphql } from 'gatsby'\n\ninterface SEOProps {\n  title: string\n  description: string\n  author: string\n  keywords: string[]\n  image: string\n  article: boolean\n}\n\nconst SEO = (props: SEOProps) => {\n  return (\n    <StaticQuery\n      query={query}\n      render={data => {\n        const title = props.title || data.site.siteMetadata.description\n        const description =\n          props.description || data.site.siteMetadata.description\n        const author = props.author || data.site.siteMetadata.author\n        const keywords = props.keywords || data.site.siteMetadata.keywords\n\n        return (\n          <Helmet title={`${title} - ${data.site.siteMetadata.title}`}>\n            <meta name=\"description\" content={description} />\n            <meta name=\"author\" content={author} />\n            <meta name=\"keywords\" content={keywords.join()} />\n\n            <meta property=\"og:title\" content={title} />\n            <meta property=\"og:description\" content={description} />\n            {props.article && <meta property=\"og:type\" content=\"article\" />}\n            {props.image && <meta property=\"og:image\" content={props.image} />}\n          </Helmet>\n        )\n      }}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  title: null,\n  description: null,\n  author: null,\n  keywords: null,\n  image: null,\n  article: false,\n}\n\nexport const query = graphql`\n  query getSiteMetadata {\n    site {\n      siteMetadata {\n        title\n        description\n        author\n        keywords\n      }\n    }\n  }\n`\n\nexport default SEO\n"],"sourceRoot":""}