{"version":3,"sources":["webpack:///./src/pages/index.tsx","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./src/utils/typography.js","webpack:///./src/components/layout.tsx","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/assets/moon.svg","webpack:///./src/assets/cloudy.svg","webpack:///./src/components/seo.tsx","webpack:///./node_modules/core-js/modules/es6.string.link.js","webpack:///./node_modules/core-js/modules/_string-html.js"],"names":["query","IndexPage","props","Object","_emotion_core__WEBPACK_IMPORTED_MODULE_1__","_components_layout__WEBPACK_IMPORTED_MODULE_4__","_components_seo__WEBPACK_IMPORTED_MODULE_5__","css","_ref","data","books","edges","map","_ref4","node","key","id","_ref2","gatsby__WEBPACK_IMPORTED_MODULE_2__","to","fields","slug","src","frontmatter","thumbnail","publicURL","_ref3","mediumBlogs","nodes","blog","href","link","target","title","date","site","siteMetadata","social","medium","StaticQueryContext","React","createContext","StaticQueryDataRenderer","staticQueryData","render","finalData","_emotion_core__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_1___default","a","Fragment","StaticQuery","children","Consumer","propTypes","PropTypes","object","string","isRequired","func","m","module","exports","require","default","__webpack_require__","d","__webpack_exports__","rhythm","typography__WEBPACK_IMPORTED_MODULE_0__","systemFontStack","typography","n","Typography","headerFontFamily","bodyFontFamily","Layout","gatsby__WEBPACK_IMPORTED_MODULE_3__","github","gatsby_plugin_dark_mode__WEBPACK_IMPORTED_MODULE_4__","theme","toggleTheme","react__WEBPACK_IMPORTED_MODULE_2___default","rel","sun","moon","onClick","_public_static_d_819524010_json__WEBPACK_IMPORTED_MODULE_1__","ProdPageRenderer","location","pageResources","createElement","InternalPageRenderer","assign","json","shape","pathname","p","SEO","gatsby__WEBPACK_IMPORTED_MODULE_4__","description","author","keywords","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","name","content","join","property","siteUrl","article","image","facebookAppID","_public_static_d_2275441860_json__WEBPACK_IMPORTED_MODULE_1__","defaultProps","createHTML","url","this","$export","fails","defined","quot","tag","attribute","value","S","String","p1","replace","NAME","exec","O","P","F","test","toLowerCase","split","length"],"mappings":"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","file":"component---src-pages-index-tsx-321b18f8b1a4610b2364.js","sourcesContent":["import { graphql, Link } from 'gatsby'\nimport React from 'react'\nimport { css } from '@emotion/core'\nimport Layout from '../components/layout'\nimport SEO from '../components/seo'\nimport BlogCard from '../components/BlogCard'\n\ninterface AllMarkdownProps {\n  data: {\n    books: {\n      edges: [\n        {\n          node: {\n            id: string\n            frontmatter: {\n              title: string\n              cover: {\n                name: string\n                publicURL: string\n              }\n              thumbnail: {\n                name: string\n                publicURL: string\n              }\n              date: Date\n              tags: [string]\n            }\n            fields: {\n              slug: string\n            }\n            excerpt: string\n          }\n        },\n      ]\n    }\n    mediumBlogs: {\n      nodes: [\n        {\n          id: string\n          date: string\n          title: string\n          link: string\n        },\n      ]\n    }\n    site: {\n      siteMetadata: {\n        social: {\n          medium: string\n        }\n      }\n    }\n  }\n}\n\nconst IndexPage = (props: AllMarkdownProps) => {\n  return (\n    <Layout>\n      <SEO />\n      <section>\n        <h1>Books I've read.</h1>\n        <div\n          css={css`\n            display: flex;\n          `}\n        >\n          {props.data.books.edges.map(({ node }) => {\n            return (\n              <div\n                key={node.id}\n                css={css`\n                  width: 120px;\n                  margin-right: 10px;\n                `}\n              >\n                <Link to={node.fields.slug}>\n                  <img\n                    src={node.frontmatter.thumbnail.publicURL}\n                    css={css`\n                      border: 1px darkgrey solid;\n                    `}\n                  />\n                </Link>\n              </div>\n            )\n          })}\n        </div>\n      </section>\n      <section>\n        <h1>Blogs I've written.</h1>\n        {props.data.mediumBlogs.nodes.map(blog => {\n          return (\n            <a key={blog.id} href={blog.link} target=\"_blank\">\n              <p>\n                {blog.title} - {blog.date}\n              </p>\n            </a>\n          )\n        })}\n        <a href={props.data.site.siteMetadata.social.medium} target=\"_blank\">\n          <p>see more</p>\n        </a>\n      </section>\n    </Layout>\n  )\n}\n\nexport const query = graphql`\n  query {\n    books: allMarkdownRemark(\n      sort: { fields: frontmatter___date, order: DESC }\n      filter: { frontmatter: { tags: { eq: \"เล่าหนังสือ\" } } }\n    ) {\n      edges {\n        node {\n          id\n          frontmatter {\n            title\n            cover {\n              name\n              publicURL\n            }\n            thumbnail {\n              name\n              publicURL\n            }\n            date(formatString: \"DD MMMM, YYYY\")\n            tags\n          }\n          fields {\n            slug\n          }\n          excerpt(truncate: true, pruneLength: 250)\n        }\n      }\n    }\n    mediumBlogs: allMediumFeed {\n      nodes {\n        id\n        date(fromNow: true)\n        title\n        link\n      }\n    }\n    site {\n      siteMetadata {\n        social {\n          medium\n        }\n      }\n    }\n  }\n`\n\nexport default IndexPage\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nfunction StaticQueryDataRenderer({ staticQueryData, data, query, render }) {\n  const finalData = data\n    ? data.data\n    : staticQueryData[query] && staticQueryData[query].data\n\n  return (\n    <React.Fragment>\n      {finalData && render(finalData)}\n      {!finalData && <div>Loading (StaticQuery)</div>}\n    </React.Fragment>\n  )\n}\n\nconst StaticQuery = props => {\n  const { data, query, render, children } = props\n\n  return (\n    <StaticQueryContext.Consumer>\n      {staticQueryData => (\n        <StaticQueryDataRenderer\n          data={data}\n          query={query}\n          render={render || children}\n          staticQueryData={staticQueryData}\n        />\n      )}\n    </StaticQueryContext.Consumer>\n  )\n}\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import Typography from 'typography'\n\nconst systemFontStack = [\n  '-apple-system',\n  'BlinkMacSystemFont',\n  'Segoe UI',\n  'Roboto',\n  'Oxygen-Sans',\n  'Ubuntu',\n  'Cantarell',\n  'Helvetica Neue',\n  'Helvetica',\n  'Arial',\n  'sans-serif',\n]\n\nconst typography = new Typography({\n  headerFontFamily: systemFontStack,\n  bodyFontFamily: systemFontStack,\n})\n\nexport default typography\nexport const rhythm = typography.rhythm\n","import React from 'react'\nimport { css } from '@emotion/core'\nimport { Link, graphql, StaticQuery } from 'gatsby'\nimport { ThemeToggler } from 'gatsby-plugin-dark-mode'\n\nimport { rhythm } from '../utils/typography'\nimport moon from '../assets/moon.svg'\nimport sun from '../assets/cloudy.svg'\n\nfunction Layout({ children }) {\n  return (\n    <StaticQuery\n      query={graphql`\n        query {\n          site {\n            siteMetadata {\n              social {\n                github\n              }\n            }\n          }\n        }\n      `}\n      render={data => {\n        const { github } = data.site.siteMetadata.social\n        return (\n          <ThemeToggler>\n            {({ theme, toggleTheme }) => {\n              return (\n                <>\n                  <div\n                    css={css`\n                      margin: 0 auto;\n                      max-width: 700px;\n                      padding: ${rhythm(1)};\n                      text-align: right;\n                    `}\n                  >\n                    <Link\n                      css={css`\n                        text-decoration: none;\n                        margin-left: ${rhythm(0.5)};\n                      `}\n                      to={`/`}\n                    >\n                      Home\n                    </Link>\n                    <a\n                      css={css`\n                        text-decoration: none;\n                        margin-left: ${rhythm(0.5)};\n                      `}\n                      href={github}\n                      target=\"_blank\"\n                      rel=\"noopener noreferrer\"\n                    >\n                      GitHub\n                    </a>\n                    <img\n                      src={theme === 'dark' ? sun : moon}\n                      css={css`\n                        display: inline-block;\n                        cursor: pointer;\n                        width: 25px;\n                        vertical-align: bottom;\n                        margin-bottom: 0;\n                        margin-left: ${rhythm(0.5)};\n                      `}\n                      onClick={() =>\n                        toggleTheme(theme === 'dark' ? 'light' : 'dark')\n                      }\n                    />\n                  </div>\n                  <div\n                    css={css`\n                      margin: 0 auto;\n                      max-width: 700px;\n                      padding: ${rhythm(2)} ${rhythm(1)};\n                    `}\n                  >\n                    {children}\n                  </div>\n                </>\n              )\n            }}\n          </ThemeToggler>\n        )\n      }}\n    />\n  )\n}\n\nexport default Layout\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\n\nconst ProdPageRenderer = ({ location, pageResources }) => {\n  if (!pageResources) {\n    return null\n  }\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","module.exports = __webpack_public_path__ + \"static/moon-e69b44d409556483a5b36e82531126ec.svg\";","module.exports = __webpack_public_path__ + \"static/cloudy-1259b6d43da52a09b23caf706893e3f8.svg\";","import React from 'react'\nimport Helmet from 'react-helmet'\nimport { StaticQuery, graphql } from 'gatsby'\n\ninterface SEOProps {\n  title: string\n  description: string\n  author: string\n  keywords: string[]\n  image: string\n  article: boolean\n  slug: string\n}\n\nconst SEO = (props: SEOProps) => {\n  return (\n    <StaticQuery\n      query={query}\n      render={data => {\n        const title = props.title || data.site.siteMetadata.title\n        const description = props.description || data.site.siteMetadata.title\n        const author = props.author || data.site.siteMetadata.author\n        const keywords = props.keywords || data.site.siteMetadata.keywords\n        const slug = props.slug || '/'\n\n        return (\n          <Helmet title={title}>\n            <meta name=\"description\" content={description} />\n            <meta name=\"author\" content={author} />\n            <meta name=\"keywords\" content={keywords.join()} />\n\n            <meta\n              property=\"og:url\"\n              content={`${data.site.siteMetadata.siteUrl}${slug}`}\n            />\n            <meta property=\"og:title\" content={title} />\n            <meta property=\"og:description\" content={description} />\n            {props.article && <meta property=\"og:type\" content=\"article\" />}\n            {props.image && (\n              <meta\n                property=\"og:image\"\n                content={`${data.site.siteMetadata.siteUrl}${props.image}`}\n              />\n            )}\n            <meta property=\"og:locale\" content=\"th_TH\" />\n            <meta\n              property=\"fb:app_id\"\n              content={data.site.siteMetadata.facebookAppID}\n            />\n          </Helmet>\n        )\n      }}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  title: null,\n  description: null,\n  author: null,\n  keywords: null,\n  image: null,\n  article: false,\n  slug: null,\n}\n\nexport const query = graphql`\n  query getSiteMetadata {\n    site {\n      siteMetadata {\n        title\n        author\n        keywords\n        siteUrl\n        facebookAppID\n      }\n    }\n  }\n`\n\nexport default SEO\n","'use strict';\n// B.2.3.10 String.prototype.link(url)\nrequire('./_string-html')('link', function (createHTML) {\n  return function link(url) {\n    return createHTML(this, 'a', 'href', url);\n  };\n});\n","var $export = require('./_export');\nvar fails = require('./_fails');\nvar defined = require('./_defined');\nvar quot = /\"/g;\n// B.2.3.2.1 CreateHTML(string, tag, attribute, value)\nvar createHTML = function (string, tag, attribute, value) {\n  var S = String(defined(string));\n  var p1 = '<' + tag;\n  if (attribute !== '') p1 += ' ' + attribute + '=\"' + String(value).replace(quot, '&quot;') + '\"';\n  return p1 + '>' + S + '</' + tag + '>';\n};\nmodule.exports = function (NAME, exec) {\n  var O = {};\n  O[NAME] = exec(createHTML);\n  $export($export.P + $export.F * fails(function () {\n    var test = ''[NAME]('\"');\n    return test !== test.toLowerCase() || test.split('\"').length > 3;\n  }), 'String', O);\n};\n"],"sourceRoot":""}