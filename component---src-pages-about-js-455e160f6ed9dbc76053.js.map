{"version":3,"sources":["webpack:///./src/pages/about.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./src/utils/typography.js","webpack:///./src/components/layout.js","webpack:///./.cache/public-page-renderer-prod.js"],"names":["query","About","_ref","data","Object","_emotion_core__WEBPACK_IMPORTED_MODULE_0__","_components_layout__WEBPACK_IMPORTED_MODULE_2__","site","siteMetadata","title","m","module","exports","require","default","StaticQueryContext","React","createContext","StaticQuery","props","Consumer","staticQueryData","render","children","graphql","Error","propTypes","PropTypes","object","string","isRequired","func","__webpack_require__","d","__webpack_exports__","rhythm","typography__WEBPACK_IMPORTED_MODULE_0__","typography__WEBPACK_IMPORTED_MODULE_0___default","n","typography_theme_kirkham__WEBPACK_IMPORTED_MODULE_1__","typography_theme_kirkham__WEBPACK_IMPORTED_MODULE_1___default","typography","Typography","kirkhamTheme","Layout","_ref2","gatsby__WEBPACK_IMPORTED_MODULE_3__","css","to","_public_static_d_3892401927_json__WEBPACK_IMPORTED_MODULE_1__","ProdPageRenderer","location","pageResources","loader","getResourcesForPathnameSync","pathname","createElement","InternalPageRenderer","assign","json","shape"],"mappings":"gKAcaA,EAAK,aAUHC,UApBD,SAAAC,GAAA,IAAGC,EAAHD,EAAGC,KAAH,OACZC,OAAAC,EAAA,EAAAD,CAACE,EAAA,EAAD,KACEF,OAAAC,EAAA,EAAAD,CAAA,mBAAWD,EAAKI,KAAKC,aAAaC,OAClCL,OAAAC,EAAA,EAAAD,CAAA,+JCPJ,IAAsBM,EAKpBC,EAAOC,SALaF,EAKWG,EAAQ,OALRH,EAAEI,SAAYJ,qnBCY/C,IAAMK,EAAqBC,IAAMC,cAAc,IAEzCC,EAAc,SAAAC,GAAK,OACvBf,OAAAC,EAAA,EAAAD,CAACW,EAAmBK,SAApB,KACG,SAAAC,GACC,OACEF,EAAMhB,MACLkB,EAAgBF,EAAMnB,QAAUqB,EAAgBF,EAAMnB,OAAOG,MAEtDgB,EAAMG,QAAUH,EAAMI,UAC5BJ,EAAMhB,KAAOgB,EAAMhB,KAAKA,KAAOkB,EAAgBF,EAAMnB,OAAOG,MAGvDC,OAAAC,EAAA,EAAAD,CAAA,uCAaf,SAASoB,IACP,MAAM,IAAIC,MACR,gVATJP,EAAYQ,UAAY,CACtBvB,KAAMwB,IAAUC,OAChB5B,MAAO2B,IAAUE,OAAOC,WACxBR,OAAQK,IAAUI,KAClBR,SAAUI,IAAUI,wCCnCtBC,EAAAC,EAAAC,EAAA,sBAAAC,IAAA,IAAAC,EAAAJ,EAAA,KAAAK,EAAAL,EAAAM,EAAAF,GAAAG,EAAAP,EAAA,KAAAQ,EAAAR,EAAAM,EAAAC,GAGME,EAAa,IAAIC,IAAWC,KAGrBR,EAASM,EAAWN,+HCgElBS,IA1DA,SAAAC,GAAA,IAAGtB,EAAHsB,EAAGtB,SAAH,OAcbnB,OAAAC,EAAA,EAbA,CAaCyC,EAAA,YAAD,CACE9C,MAAK,aASLsB,OAAQ,SAAAnB,GAAI,OACVC,OAAAC,EAAA,EAAAD,CAAA,OACE2C,IAAKA,YAAF,yCAGUZ,YAAO,GAHjB,gBAIcA,YAAO,KAJrB,MAOH/B,OAAAC,EAAA,EAAAD,CAAC0C,EAAA,KAAD,CAAME,GAAE,KACN5C,OAAAC,EAAA,EAAAD,CAAA,MACE2C,IAAKA,YAAF,iBACgBZ,YAAO,GADvB,6CAMFhC,EAAKI,KAAKC,aAAaC,QAG5BL,OAAAC,EAAA,EAAAD,CAAC0C,EAAA,KAAD,CACEE,GAAE,UACFD,IAAG7C,GAFL,SAQCqB,IAtCPpB,KAAA8C,gMCpBIC,EAAmB,SAAAhD,GAAkB,IAAfiD,EAAejD,EAAfiD,SACpBC,EAAgBC,UAAOC,4BAA4BH,EAASI,UAClE,OAAOvC,IAAMwC,cAAcC,IAApBrD,OAAAsD,OAAA,CACLP,WACAC,iBACGA,EAAcO,QAIrBT,EAAiBxB,UAAY,CAC3ByB,SAAUxB,IAAUiC,MAAM,CACxBL,SAAU5B,IAAUE,OAAOC,aAC1BA,YAGUoB","file":"component---src-pages-about-js-455e160f6ed9dbc76053.js","sourcesContent":["import React from \"react\"\nimport { graphql } from \"gatsby\"\nimport Layout from '../components/layout'\n\nconst About = ({ data }) => (\n  <Layout>\n    <h1>About {data.site.siteMetadata.title}</h1> \n    <p>\n      We're the only site running on your computer dedicated to showing the best\n      photos and videos of pandas eating lots of food.\n    </p>\n  </Layout>\n)\n\nexport const query = graphql`\n  query {\n    site {\n      siteMetadata {\n        title\n      }\n    }\n  }\n`\n\nexport default About\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport parsePath from \"./parse-path\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n}\n","import Typography from \"typography\"\nimport kirkhamTheme from \"typography-theme-kirkham\"\n\nconst typography = new Typography(kirkhamTheme)\n\nexport default typography\nexport const rhythm = typography.rhythm\n","import React from \"react\"\nimport { css } from \"@emotion/core\"\nimport { StaticQuery, Link, graphql } from \"gatsby\"\n\nimport { rhythm } from \"../utils/typography\"\n\nconst ListLink = props => (\n  <li style={{ display: `inline-block`, marginRight: `1rem` }}>\n    <Link to={props.to}>{props.children}</Link>\n  </li>\n)\n\nconst Layout = ({ children }) => (\n  // <div style={{ margin: `0 auto`, maxWidth: 650, padding: `1.25rem 1rem` }}>\n  //   <header style={{ marginBottom: `1.5rem` }}>\n  //     <Link to=\"/\" style={{ textShadow: `none`, backgroundImage: `none` }}>\n  //       <h3 style={{ display: `inline` }}>MySweetSite</h3>\n  //     </Link>\n  //     <ul style={{ listStyle: `none`, float: `right` }}>\n  //       <ListLink to=\"/\">Home</ListLink>\n  //       <ListLink to=\"/about/\">About</ListLink>\n  //       <ListLink to=\"/contact/\">Contact</ListLink>\n  //     </ul>\n  //   </header>\n  //   {children}\n  // </div>\n  <StaticQuery\n    query={graphql`\n      query {\n        site {\n          siteMetadata {\n            title\n          }\n        }\n      }\n    `}\n    render={data => (\n      <div\n        css={css`\n          margin: 0 auto;\n          max-width: 700px;\n          padding: ${rhythm(2)};\n          padding-top: ${rhythm(1.5)};\n        `}\n      >\n        <Link to={`/`}>\n          <h3\n            css={css`\n              margin-bottom: ${rhythm(2)};\n              display: inline-block;\n              font-style: normal;\n            `}\n          >\n            {data.site.siteMetadata.title}\n          </h3>\n        </Link>\n        <Link\n          to={`/about/`}\n          css={css`\n            float: right;\n          `}\n        >\n          About\n        </Link>\n        {children}\n      </div>\n    )}\n  />\n)\n\nexport default Layout\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n"],"sourceRoot":""}