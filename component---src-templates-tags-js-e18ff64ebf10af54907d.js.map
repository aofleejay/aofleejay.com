{"version":3,"sources":["webpack:///./src/templates/tags.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./src/utils/typography.js","webpack:///./src/components/layout.tsx","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/assets/moon.svg","webpack:///./src/assets/cloudy.svg","webpack:///./src/components/seo.tsx","webpack:///./src/components/BlogCard.tsx"],"names":["query","TagsPage","_ref","data","Object","_emotion_core__WEBPACK_IMPORTED_MODULE_0__","_components_layout__WEBPACK_IMPORTED_MODULE_2__","_components_seo__WEBPACK_IMPORTED_MODULE_3__","allMarkdownRemark","edges","map","_ref2","node","_components_BlogCard__WEBPACK_IMPORTED_MODULE_4__","key","id","post","StaticQueryContext","React","createContext","StaticQueryDataRenderer","staticQueryData","render","finalData","react__WEBPACK_IMPORTED_MODULE_1___default","a","Fragment","StaticQuery","props","children","Consumer","propTypes","PropTypes","object","string","isRequired","func","m","module","exports","require","default","__webpack_require__","d","__webpack_exports__","rhythm","typography__WEBPACK_IMPORTED_MODULE_0__","systemFontStack","typography","n","Typography","headerFontFamily","bodyFontFamily","Layout","gatsby__WEBPACK_IMPORTED_MODULE_3__","github","site","siteMetadata","social","gatsby_plugin_dark_mode__WEBPACK_IMPORTED_MODULE_4__","theme","toggleTheme","react__WEBPACK_IMPORTED_MODULE_2___default","css","to","href","target","rel","src","sun","moon","onClick","_public_static_d_819524010_json__WEBPACK_IMPORTED_MODULE_1__","ProdPageRenderer","location","pageResources","createElement","InternalPageRenderer","assign","json","shape","pathname","p","SEO","gatsby__WEBPACK_IMPORTED_MODULE_4__","title","description","author","keywords","slug","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","name","content","join","property","siteUrl","article","image","facebookAppID","_public_static_d_2275441860_json__WEBPACK_IMPORTED_MODULE_1__","defaultProps","BlogCard","_ref5","_emotion_core__WEBPACK_IMPORTED_MODULE_1__","fields","frontmatter","date","tags","tag","_ref3","_ref4","cover","publicURL","alt","excerpt"],"mappings":"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","file":"component---src-templates-tags-js-e18ff64ebf10af54907d.js","sourcesContent":["import React from 'react'\nimport { graphql } from 'gatsby'\n\nimport Layout from '../components/layout'\nimport SEO from '../components/seo'\nimport BlogCard from '../components/BlogCard'\n\nconst TagsPage = ({ data }) => {\n  return (\n    <Layout>\n      <SEO />\n      {data.allMarkdownRemark.edges.map(({ node }) => (\n        <BlogCard key={node.id} post={node} />\n      ))}\n    </Layout>\n  )\n}\n\nexport const query = graphql`\n  query($tag: String!, $skip: Int!, $limit: Int!) {\n    allMarkdownRemark(\n      sort: { fields: [frontmatter___date], order: DESC }\n      filter: { frontmatter: { tags: { in: [$tag] } } }\n      limit: $limit\n      skip: $skip\n    ) {\n      edges {\n        node {\n          id\n          frontmatter {\n            title\n            cover {\n              name\n              publicURL\n            }\n            date(formatString: \"DD MMMM, YYYY\")\n            tags\n          }\n          fields {\n            slug\n          }\n          excerpt(truncate: true, pruneLength: 250)\n        }\n      }\n    }\n  }\n`\n\nexport default TagsPage\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nfunction StaticQueryDataRenderer({ staticQueryData, data, query, render }) {\n  const finalData = data\n    ? data.data\n    : staticQueryData[query] && staticQueryData[query].data\n\n  return (\n    <React.Fragment>\n      {finalData && render(finalData)}\n      {!finalData && <div>Loading (StaticQuery)</div>}\n    </React.Fragment>\n  )\n}\n\nconst StaticQuery = props => {\n  const { data, query, render, children } = props\n\n  return (\n    <StaticQueryContext.Consumer>\n      {staticQueryData => (\n        <StaticQueryDataRenderer\n          data={data}\n          query={query}\n          render={render || children}\n          staticQueryData={staticQueryData}\n        />\n      )}\n    </StaticQueryContext.Consumer>\n  )\n}\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import Typography from 'typography'\n\nconst systemFontStack = [\n  '-apple-system',\n  'BlinkMacSystemFont',\n  'Segoe UI',\n  'Roboto',\n  'Oxygen-Sans',\n  'Ubuntu',\n  'Cantarell',\n  'Helvetica Neue',\n  'Helvetica',\n  'Arial',\n  'sans-serif',\n]\n\nconst typography = new Typography({\n  headerFontFamily: systemFontStack,\n  bodyFontFamily: systemFontStack,\n})\n\nexport default typography\nexport const rhythm = typography.rhythm\n","import React from 'react'\nimport { css } from '@emotion/core'\nimport { Link, graphql, StaticQuery } from 'gatsby'\nimport { ThemeToggler } from 'gatsby-plugin-dark-mode'\n\nimport { rhythm } from '../utils/typography'\nimport moon from '../assets/moon.svg'\nimport sun from '../assets/cloudy.svg'\n\nfunction Layout({ children }) {\n  return (\n    <StaticQuery\n      query={graphql`\n        query {\n          site {\n            siteMetadata {\n              social {\n                github\n              }\n            }\n          }\n        }\n      `}\n      render={data => {\n        const { github } = data.site.siteMetadata.social\n        return (\n          <ThemeToggler>\n            {({ theme, toggleTheme }) => {\n              return (\n                <>\n                  <div\n                    css={css`\n                      margin: 0 auto;\n                      max-width: 700px;\n                      padding: ${rhythm(1)};\n                      text-align: right;\n                    `}\n                  >\n                    <Link\n                      css={css`\n                        text-decoration: none;\n                        margin-left: ${rhythm(0.5)};\n                      `}\n                      to={`/`}\n                    >\n                      Home\n                    </Link>\n                    <a\n                      css={css`\n                        text-decoration: none;\n                        margin-left: ${rhythm(0.5)};\n                      `}\n                      href={github}\n                      target=\"_blank\"\n                      rel=\"noopener noreferrer\"\n                    >\n                      GitHub\n                    </a>\n                    <img\n                      src={theme === 'dark' ? sun : moon}\n                      css={css`\n                        display: inline-block;\n                        cursor: pointer;\n                        width: 25px;\n                        vertical-align: bottom;\n                        margin-bottom: 0;\n                        margin-left: ${rhythm(0.5)};\n                      `}\n                      onClick={() =>\n                        toggleTheme(theme === 'dark' ? 'light' : 'dark')\n                      }\n                    />\n                  </div>\n                  <div\n                    css={css`\n                      margin: 0 auto;\n                      max-width: 700px;\n                      padding: ${rhythm(2)} ${rhythm(1)};\n                    `}\n                  >\n                    {children}\n                  </div>\n                </>\n              )\n            }}\n          </ThemeToggler>\n        )\n      }}\n    />\n  )\n}\n\nexport default Layout\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\n\nconst ProdPageRenderer = ({ location, pageResources }) => {\n  if (!pageResources) {\n    return null\n  }\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","module.exports = __webpack_public_path__ + \"static/moon-e69b44d409556483a5b36e82531126ec.svg\";","module.exports = __webpack_public_path__ + \"static/cloudy-1259b6d43da52a09b23caf706893e3f8.svg\";","import React from 'react'\nimport Helmet from 'react-helmet'\nimport { StaticQuery, graphql } from 'gatsby'\n\ninterface SEOProps {\n  title: string\n  description: string\n  author: string\n  keywords: string[]\n  image: string\n  article: boolean\n  slug: string\n}\n\nconst SEO = (props: SEOProps) => {\n  return (\n    <StaticQuery\n      query={query}\n      render={data => {\n        const title = props.title || data.site.siteMetadata.title\n        const description = props.description || data.site.siteMetadata.title\n        const author = props.author || data.site.siteMetadata.author\n        const keywords = props.keywords || data.site.siteMetadata.keywords\n        const slug = props.slug || '/'\n\n        return (\n          <Helmet title={title}>\n            <meta name=\"description\" content={description} />\n            <meta name=\"author\" content={author} />\n            <meta name=\"keywords\" content={keywords.join()} />\n\n            <meta\n              property=\"og:url\"\n              content={`${data.site.siteMetadata.siteUrl}${slug}`}\n            />\n            <meta property=\"og:title\" content={title} />\n            <meta property=\"og:description\" content={description} />\n            {props.article && <meta property=\"og:type\" content=\"article\" />}\n            {props.image && (\n              <meta\n                property=\"og:image\"\n                content={`${data.site.siteMetadata.siteUrl}${props.image}`}\n              />\n            )}\n            <meta property=\"og:locale\" content=\"th_TH\" />\n            <meta\n              property=\"fb:app_id\"\n              content={data.site.siteMetadata.facebookAppID}\n            />\n          </Helmet>\n        )\n      }}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  title: null,\n  description: null,\n  author: null,\n  keywords: null,\n  image: null,\n  article: false,\n  slug: null,\n}\n\nexport const query = graphql`\n  query getSiteMetadata {\n    site {\n      siteMetadata {\n        title\n        author\n        keywords\n        siteUrl\n        facebookAppID\n      }\n    }\n  }\n`\n\nexport default SEO\n","import React from 'react'\nimport { css } from '@emotion/core'\nimport { Link } from 'gatsby'\n\nimport { rhythm } from '../utils/typography'\n\nconst BlogCard = ({ post }) => {\n  return (\n    <div\n      css={css`\n        margin-bottom: ${rhythm(2)};\n      `}\n    >\n      <Link\n        css={css`\n          text-decoration: none;\n          color: inherit;\n        `}\n        to={post.fields.slug}\n      >\n        <h1\n          css={css`\n            margin-bottom: ${rhythm(1 / 2)};\n          `}\n        >\n          {post.frontmatter.title}\n        </h1>\n      </Link>\n      <p\n        css={css`\n          color: #bbb;\n        `}\n      >\n        {post.frontmatter.date}\n        <span\n          css={css`\n            padding: 0 ${rhythm(1 / 2)};\n          `}\n        >\n          |\n        </span>\n        {post.frontmatter.tags.map(tag => (\n          <Link\n            key={tag}\n            to={`/tags/${tag}`}\n            css={css`\n              text-decoration: none;\n              color: inherit;\n            `}\n          >\n            <span>{tag}</span>\n          </Link>\n        ))}\n      </p>\n      <Link\n        css={css`\n          text-decoration: none;\n          color: inherit;\n        `}\n        to={post.fields.slug}\n      >\n        {post.frontmatter.cover && (\n          <img\n            src={post.frontmatter.cover.publicURL}\n            alt={post.frontmatter.cover.name}\n          />\n        )}\n        <p>{post.excerpt}</p>\n      </Link>\n    </div>\n  )\n}\n\nexport default BlogCard\n"],"sourceRoot":""}