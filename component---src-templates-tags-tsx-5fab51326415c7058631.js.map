{"version":3,"sources":["webpack:///./src/components/blog-card.tsx","webpack:///./src/templates/tags.tsx"],"names":["BlogCard","post","css","rhythm","to","fields","slug","frontmatter","title","date","tags","map","tag","key","reduce","prev","curr","src","coverImage","publicURL","defaultCoverImage","alt","name","excerpt","query","TagsPage","data","allMarkdownRemark","edges","node","id"],"mappings":"ibAgGeA,EAvEE,SAAC,GAA2B,IAAzBC,EAAyB,EAAzBA,KAClB,OACE,mBACEC,IAAKA,YAAF,iBACgBC,YAAO,GADvB,MAIH,YAAC,OAAD,CACED,IAAG,EAIHE,GAAIH,EAAKI,OAAOC,MAEhB,kBACEJ,IAAKA,YAAF,iBACgBC,YAAO,IADvB,MAIFF,EAAKM,YAAYC,QAGtB,iBACEN,IAAG,GAIFD,EAAKM,YAAYE,KAClB,oBACEP,IAAKA,YAAF,aACYC,YAAO,IADnB,MADL,KAOCF,EAAKM,YAAYG,KACfC,KAAqB,SAAAC,GAAG,OACvB,YAAC,OAAD,CACEC,IAAKD,EACLR,GAAE,SAAWQ,EACbV,IAAG,GAKH,wBAAOU,OAGVE,QAAO,SAACC,EAAMC,GAAP,MAAgB,CAACD,EAAM,KAAMC,OAEzC,YAAC,OAAD,CACEd,IAAG,EAIHE,GAAIH,EAAKI,OAAOC,MAEhB,mBACEW,IACEhB,EAAKM,YAAYW,WACbjB,EAAKM,YAAYW,WAAWC,UAC5BC,IAENC,IAAKpB,EAAKM,YAAYW,YAAcjB,EAAKM,YAAYW,WAAWI,OAElE,qBAAIrB,EAAKsB,YC1FjB,sCAOA,IAWaC,EAAQ,aA4BNC,UAvCE,SAAC,GAAa,IAAXC,EAAW,EAAXA,KAClB,OACE,YAAC,IAAD,KACE,YAAC,IAAD,MACCA,EAAKC,kBAAkBC,MAAMjB,KAAI,gBAAGkB,EAAH,EAAGA,KAAH,OAChC,YAAC,EAAD,CAAUhB,IAAKgB,EAAKC,GAAI7B,KAAM4B","file":"component---src-templates-tags-tsx-5fab51326415c7058631.js","sourcesContent":["import React from 'react'\nimport { css } from '@emotion/core'\nimport { Link } from 'gatsby'\n\nimport { rhythm } from '../utils/typography'\nimport defaultCoverImage from '../assets/default-cover-image.jpg'\n\ntype BlogCardProp = {\n  post: {\n    fields: {\n      slug: string\n    }\n    frontmatter: {\n      title: string\n      date: string\n      tags: string[]\n      coverImage: {\n        publicURL: string\n        name: string\n      }\n    }\n    excerpt: string\n  }\n}\n\nconst BlogCard = ({ post }: BlogCardProp) => {\n  return (\n    <div\n      css={css`\n        margin-bottom: ${rhythm(2)};\n      `}\n    >\n      <Link\n        css={css`\n          text-decoration: none;\n          color: inherit;\n        `}\n        to={post.fields.slug}\n      >\n        <h1\n          css={css`\n            margin-bottom: ${rhythm(1 / 2)};\n          `}\n        >\n          {post.frontmatter.title}\n        </h1>\n      </Link>\n      <p\n        css={css`\n          color: #bbb;\n        `}\n      >\n        {post.frontmatter.date}\n        <span\n          css={css`\n            padding: 0 ${rhythm(1 / 2)};\n          `}\n        >\n          |\n        </span>\n        {post.frontmatter.tags\n          .map<React.ReactNode>(tag => (\n            <Link\n              key={tag}\n              to={`/tags/${tag}`}\n              css={css`\n                text-decoration: none;\n                color: inherit;\n              `}\n            >\n              <span>{tag}</span>\n            </Link>\n          ))\n          .reduce((prev, curr) => [prev, ', ', curr])}\n      </p>\n      <Link\n        css={css`\n          text-decoration: none;\n          color: inherit;\n        `}\n        to={post.fields.slug}\n      >\n        <img\n          src={\n            post.frontmatter.coverImage\n              ? post.frontmatter.coverImage.publicURL\n              : defaultCoverImage\n          }\n          alt={post.frontmatter.coverImage && post.frontmatter.coverImage.name}\n        />\n        <p>{post.excerpt}</p>\n      </Link>\n    </div>\n  )\n}\n\nexport default BlogCard\n","import React from 'react'\nimport { graphql } from 'gatsby'\n\nimport Layout from '../components/layout'\nimport SEO from '../components/seo'\nimport BlogCard from '../components/blog-card'\n\nconst TagsPage = ({ data }) => {\n  return (\n    <Layout>\n      <SEO />\n      {data.allMarkdownRemark.edges.map(({ node }) => (\n        <BlogCard key={node.id} post={node} />\n      ))}\n    </Layout>\n  )\n}\n\nexport const query = graphql`\n  query($tag: String!) {\n    allMarkdownRemark(\n      sort: { fields: [frontmatter___date], order: DESC }\n      filter: { frontmatter: { tags: { in: [$tag] }, draft: { ne: true } } }\n    ) {\n      edges {\n        node {\n          id\n          frontmatter {\n            title\n            coverImage {\n              name\n              publicURL\n            }\n            date(formatString: \"DD MMMM, YYYY\")\n            tags\n          }\n          fields {\n            slug\n          }\n          excerpt(truncate: true, pruneLength: 250)\n        }\n      }\n    }\n  }\n`\n\nexport default TagsPage\n"],"sourceRoot":""}