{"version":3,"sources":["webpack:///./src/pages/index.js","webpack:///./.cache/public-page-renderer.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./src/utils/typography.js","webpack:///./src/components/layout.js","webpack:///./.cache/public-page-renderer-prod.js"],"names":["query","IndexPage","_ref3","data","Object","_emotion_core__WEBPACK_IMPORTED_MODULE_0__","_components_layout__WEBPACK_IMPORTED_MODULE_4__","allMarkdownRemark","totalCount","edges","map","_ref4","node","key","id","gatsby__WEBPACK_IMPORTED_MODULE_2__","to","fields","slug","css","_ref","rhythm","frontmatter","title","_ref2","date","excerpt","m","module","exports","require","default","StaticQueryContext","React","createContext","StaticQuery","props","Consumer","staticQueryData","render","children","graphql","Error","propTypes","PropTypes","object","string","isRequired","func","__webpack_require__","d","__webpack_exports__","typography__WEBPACK_IMPORTED_MODULE_0__","typography__WEBPACK_IMPORTED_MODULE_0___default","n","typography_theme_kirkham__WEBPACK_IMPORTED_MODULE_1__","typography_theme_kirkham__WEBPACK_IMPORTED_MODULE_1___default","typography","Typography","kirkhamTheme","ListLink","Layout","ProdPageRenderer","location","pageResources","loader","getResourcesForPathnameSync","pathname","createElement","InternalPageRenderer","assign","json","shape"],"mappings":"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","file":"component---src-pages-index-js-841b7bbf387d9e9467d8.js","sourcesContent":["import React from 'react'\nimport { Link, graphql } from 'gatsby'\nimport { css } from '@emotion/core'\nimport { rhythm } from '../utils/typography'\nimport Layout from '../components/layout'\n\nconst IndexPage = ({ data }) => (\n  <Layout>\n    <h4>{data.allMarkdownRemark.totalCount} Posts</h4>\n    {data.allMarkdownRemark.edges.map(({ node }) => (\n      <div key={node.id}>\n        <Link\n          to={node.fields.slug}\n          css={css`\n            text-decoration: none;\n            color: inherit;\n          `}\n        >\n          <h3\n            css={css`\n              margin-bottom: ${rhythm(1 / 4)};\n            `}\n          >\n            {node.frontmatter.title}{\" \"}\n            <span\n              css={css`\n                color: #bbb;\n              `}\n            >\n              â€” {node.frontmatter.date}\n            </span>\n          </h3>\n          <p>{node.excerpt}</p>\n        </Link>\n      </div>\n    ))}\n  </Layout>\n)\n\nexport const query = graphql`\n  query {\n    allMarkdownRemark {\n      totalCount\n      edges {\n        node {\n          id\n          frontmatter {\n            title\n            date(formatString: \"DD MMMM, YYYY\")\n          }\n          fields {\n            slug\n          }\n          excerpt\n        }\n      }\n    }\n  }\n`\n\nexport default IndexPage\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\nimport parsePath from \"./parse-path\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n}\n","import Typography from \"typography\"\nimport kirkhamTheme from \"typography-theme-kirkham\"\n\nconst typography = new Typography(kirkhamTheme)\n\nexport default typography\nexport const rhythm = typography.rhythm\n","import React from 'react'\nimport { css } from '@emotion/core'\nimport { Link } from 'gatsby'\n\nimport { rhythm } from '../utils/typography'\n\nconst ListLink = props => (\n  <li\n    css={css`\n      display: inline-block;\n      margin-right: 1rem;\n    `}\n  >\n    <Link to={props.to}>{props.children}</Link>\n  </li>\n)\n\nconst Layout = ({ children }) => (\n  <div\n    css={css`\n      margin: 0 auto;\n      max-width: 700px;\n      padding: ${rhythm(2)};\n      padding-top: ${rhythm(1.5)};\n    `}\n  >\n    <header\n      css={css`\n        margin-bottom: 1.5rem;\n      `}\n    >\n      <Link to=\"/\">\n        <h3\n          css={css`\n            margin-bottom: ${rhythm(2)};\n            display: inline-block;\n            font-style: normal;\n          `}\n        >\n          Home\n        </h3>\n      </Link>\n      <ul\n        css={css`\n          list-style: none;\n          float: right;\n        `}\n      >\n        <ListLink to=\"/about/\">About</ListLink>\n        <ListLink to=\"/contact/\">Contact</ListLink>\n      </ul>\n    </header>\n    {children}\n  </div>\n)\n\nexport default Layout\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n"],"sourceRoot":""}