{"version":3,"sources":["webpack:///./src/templates/blog-post.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./src/utils/typography.js","webpack:///./src/components/layout.tsx","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/assets/moon.svg","webpack:///./src/assets/cloudy.svg","webpack:///./src/components/seo.tsx"],"names":["query","BlogPost","_ref","post","data","markdownRemark","Object","_emotion_core__WEBPACK_IMPORTED_MODULE_1__","_components_layout__WEBPACK_IMPORTED_MODULE_3__","_components_seo__WEBPACK_IMPORTED_MODULE_4__","title","frontmatter","description","keywords","tags","image","cover","publicURL","slug","fields","article","src","alt","name","dangerouslySetInnerHTML","__html","html","StaticQueryContext","React","createContext","StaticQueryDataRenderer","staticQueryData","render","finalData","_emotion_core__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_1___default","a","Fragment","StaticQuery","props","children","Consumer","propTypes","PropTypes","object","string","isRequired","func","m","module","exports","require","default","__webpack_require__","d","__webpack_exports__","rhythm","typography__WEBPACK_IMPORTED_MODULE_0__","systemFontStack","typography","n","Typography","headerFontFamily","bodyFontFamily","_ref5","gatsby_plugin_dark_mode__WEBPACK_IMPORTED_MODULE_3__","_ref6","theme","toggleTheme","css","gatsby__WEBPACK_IMPORTED_MODULE_2__","to","_ref2","href","target","rel","_ref3","sun","moon","_ref4","onClick","ProdPageRenderer","location","pageResources","createElement","InternalPageRenderer","assign","json","shape","pathname","p","SEO","gatsby__WEBPACK_IMPORTED_MODULE_4__","site","siteMetadata","author","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","content","join","property","siteUrl","facebookAppID","_public_static_d_1964596324_json__WEBPACK_IMPORTED_MODULE_1__","defaultProps"],"mappings":"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","file":"component---src-templates-blog-post-js-428a641fef9f71807e32.js","sourcesContent":["import React from 'react'\nimport { graphql } from 'gatsby'\n\nimport Layout from '../components/layout'\nimport SEO from '../components/seo'\n\nconst BlogPost = ({ data }) => {\n  const post = data.markdownRemark\n  return (\n    <Layout>\n      <SEO\n        title={post.frontmatter.title}\n        description={post.frontmatter.description}\n        keywords={post.frontmatter.tags}\n        image={post.frontmatter.cover.publicURL}\n        slug={post.fields.slug}\n        article\n      />\n      <div>\n        <h1>{post.frontmatter.title}</h1>\n        {post.frontmatter.cover && (\n          <img\n            src={post.frontmatter.cover.publicURL}\n            alt={post.frontmatter.cover.name}\n          />\n        )}\n        <div dangerouslySetInnerHTML={{ __html: post.html }} />\n      </div>\n    </Layout>\n  )\n}\n\nexport const query = graphql`\n  query($slug: String!) {\n    markdownRemark(fields: { slug: { eq: $slug } }) {\n      html\n      frontmatter {\n        title\n        description\n        tags\n        cover {\n          name\n          publicURL\n        }\n      }\n      fields {\n        slug\n      }\n    }\n  }\n`\n\nexport default BlogPost\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nfunction StaticQueryDataRenderer({ staticQueryData, data, query, render }) {\n  const finalData = data\n    ? data.data\n    : staticQueryData[query] && staticQueryData[query].data\n\n  return (\n    <React.Fragment>\n      {finalData && render(finalData)}\n      {!finalData && <div>Loading (StaticQuery)</div>}\n    </React.Fragment>\n  )\n}\n\nconst StaticQuery = props => {\n  const { data, query, render, children } = props\n\n  return (\n    <StaticQueryContext.Consumer>\n      {staticQueryData => (\n        <StaticQueryDataRenderer\n          data={data}\n          query={query}\n          render={render || children}\n          staticQueryData={staticQueryData}\n        />\n      )}\n    </StaticQueryContext.Consumer>\n  )\n}\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import Typography from 'typography'\n\nconst systemFontStack = [\n  '-apple-system',\n  'BlinkMacSystemFont',\n  'Segoe UI',\n  'Roboto',\n  'Oxygen-Sans',\n  'Ubuntu',\n  'Cantarell',\n  'Helvetica Neue',\n  'Helvetica',\n  'Arial',\n  'sans-serif',\n]\n\nconst typography = new Typography({\n  headerFontFamily: systemFontStack,\n  bodyFontFamily: systemFontStack,\n})\n\nexport default typography\nexport const rhythm = typography.rhythm\n","import React from 'react'\nimport { css } from '@emotion/core'\nimport { Link } from 'gatsby'\nimport { ThemeToggler } from 'gatsby-plugin-dark-mode'\n\nimport { rhythm } from '../utils/typography'\nimport moon from '../assets/moon.svg'\nimport sun from '../assets/cloudy.svg'\n\nexport default ({ children }) => {\n  return (\n    <ThemeToggler>\n      {({ theme, toggleTheme }) => {\n        return (\n          <>\n            <div css={css``}>\n              <div\n                css={css`\n                  margin: 0 auto;\n                  max-width: 700px;\n                  padding: ${rhythm(1)};\n                `}\n              >\n                <Link\n                  css={css`\n                    text-decoration: none;\n                  `}\n                  to={`/`}\n                >\n                  HOME\n                </Link>\n                <span\n                  css={css`\n                    padding: 0 ${rhythm(0.5)};\n                  `}\n                >\n                  |\n                </span>\n                <a\n                  css={css`\n                    text-decoration: none;\n                  `}\n                  href=\"https://medium.com/@aofleejay/latest\"\n                  target=\"_blank\"\n                  rel=\"noopener noreferrer\"\n                >\n                  SOFTWARE DEVELOPMENT\n                </a>\n                <span\n                  css={css`\n                    padding: 0 ${rhythm(0.5)};\n                  `}\n                >\n                  |\n                </span>\n                <Link\n                  to={`/about/`}\n                  css={css`\n                    text-decoration: none;\n                  `}\n                >\n                  ABOUT\n                </Link>\n                <span\n                  css={css`\n                    padding: 0 ${rhythm(0.5)};\n                  `}\n                >\n                  |\n                </span>\n                <img\n                  src={theme === 'dark' ? sun : moon}\n                  css={css`\n                    display: inline-block;\n                    cursor: pointer;\n                    width: 25px;\n                    vertical-align: bottom;\n                    margin-bottom: 0;\n                  `}\n                  onClick={() =>\n                    toggleTheme(theme === 'dark' ? 'light' : 'dark')\n                  }\n                />\n              </div>\n            </div>\n            <div css={css``}>\n              <div\n                css={css`\n                  margin: 0 auto;\n                  max-width: 700px;\n                  padding: ${rhythm(2)} ${rhythm(1)};\n                `}\n              >\n                {children}\n              </div>\n            </div>\n          </>\n        )\n      }}\n    </ThemeToggler>\n  )\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\n\nconst ProdPageRenderer = ({ location, pageResources }) => {\n  if (!pageResources) {\n    return null\n  }\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","module.exports = __webpack_public_path__ + \"static/moon-e69b44d409556483a5b36e82531126ec.svg\";","module.exports = __webpack_public_path__ + \"static/cloudy-1259b6d43da52a09b23caf706893e3f8.svg\";","import React from 'react'\nimport Helmet from 'react-helmet'\nimport { StaticQuery, graphql } from 'gatsby'\n\ninterface SEOProps {\n  title: string\n  description: string\n  author: string\n  keywords: string[]\n  image: string\n  article: boolean\n  slug: string\n}\n\nconst SEO = (props: SEOProps) => {\n  return (\n    <StaticQuery\n      query={query}\n      render={data => {\n        const title = props.title || data.site.siteMetadata.description\n        const description =\n          props.description || data.site.siteMetadata.description\n        const author = props.author || data.site.siteMetadata.author\n        const keywords = props.keywords || data.site.siteMetadata.keywords\n        const slug = props.slug || '/'\n\n        return (\n          <Helmet title={`${title} - ${data.site.siteMetadata.title}`}>\n            <meta name=\"description\" content={description} />\n            <meta name=\"author\" content={author} />\n            <meta name=\"keywords\" content={keywords.join()} />\n\n            <meta\n              property=\"og:url\"\n              content={`${data.site.siteMetadata.siteUrl}${slug}`}\n            />\n            <meta property=\"og:title\" content={title} />\n            <meta property=\"og:description\" content={description} />\n            {props.article && <meta property=\"og:type\" content=\"article\" />}\n            {props.image && (\n              <meta\n                property=\"og:image\"\n                content={`${data.site.siteMetadata.siteUrl}${props.image}`}\n              />\n            )}\n            <meta property=\"og:locale\" content=\"th_TH\" />\n            <meta\n              property=\"fb:app_id\"\n              content={data.site.siteMetadata.facebookAppID}\n            />\n          </Helmet>\n        )\n      }}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  title: null,\n  description: null,\n  author: null,\n  keywords: null,\n  image: null,\n  article: false,\n  slug: null,\n}\n\nexport const query = graphql`\n  query getSiteMetadata {\n    site {\n      siteMetadata {\n        title\n        description\n        author\n        keywords\n        siteUrl\n        facebookAppID\n      }\n    }\n  }\n`\n\nexport default SEO\n"],"sourceRoot":""}