{"version":3,"sources":["webpack:///./src/pages/index.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./src/utils/typography.js","webpack:///./src/components/layout.js","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/seo.js","webpack:///./node_modules/core-js/modules/es6.function.name.js"],"names":["query","IndexPage","_ref","data","react__WEBPACK_IMPORTED_MODULE_1___default","a","createElement","_components_layout__WEBPACK_IMPORTED_MODULE_4__","_components_seo__WEBPACK_IMPORTED_MODULE_5__","allMarkdownRemark","edges","map","_ref2","node","key","id","gatsby__WEBPACK_IMPORTED_MODULE_2__","to","fields","slug","style","textDecoration","color","marginBottom","rhythm","frontmatter","title","fontSize","date","cover","src","publicURL","alt","name","excerpt","__webpack_require__","d","__webpack_exports__","StaticQuery","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","prop_types__WEBPACK_IMPORTED_MODULE_1__","prop_types__WEBPACK_IMPORTED_MODULE_1___default","gatsby_link__WEBPACK_IMPORTED_MODULE_2__","gatsby_link__WEBPACK_IMPORTED_MODULE_2___default","StaticQueryContext","React","createContext","props","Consumer","staticQueryData","render","children","propTypes","PropTypes","object","string","isRequired","func","m","module","exports","require","default","typography__WEBPACK_IMPORTED_MODULE_0__","typography__WEBPACK_IMPORTED_MODULE_0___default","typography_theme_github__WEBPACK_IMPORTED_MODULE_1__","typography_theme_github__WEBPACK_IMPORTED_MODULE_1___default","typography","Typography","githubTheme","gatsby__WEBPACK_IMPORTED_MODULE_1__","_utils_typography__WEBPACK_IMPORTED_MODULE_2__","Layout","margin","maxWidth","padding","paddingTop","display","justifyContent","textAlign","href","target","rel","marginLeft","ProdPageRenderer","location","pageResources","loader","getResourcesForPathnameSync","pathname","InternalPageRenderer","Object","assign","json","shape","SEO","description","lang","meta","keywords","gatsby__WEBPACK_IMPORTED_MODULE_4__","detailsQuery","metaDescription","site","siteMetadata","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","htmlAttributes","titleTemplate","defaultTitle","content","property","author","concat","length","join","_public_static_d_1025518380_json__WEBPACK_IMPORTED_MODULE_0__","defaultProps","undefined","array","arrayOf","dP","f","FProto","Function","prototype","nameRE","configurable","get","this","match","e"],"mappings":"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","file":"component---src-pages-index-js-41e3493f64bca2a4057f.js","sourcesContent":["import React from 'react'\nimport { Link, graphql } from 'gatsby'\n\nimport { rhythm } from '../utils/typography'\nimport Layout from '../components/layout'\nimport SEO from '../components/seo'\n\nconst IndexPage = ({ data }) => (\n  <Layout>\n    <SEO />\n    {data.allMarkdownRemark.edges.map(({ node }) => (\n      <div key={node.id}>\n        <Link\n          to={node.fields.slug}\n          style={{ textDecoration: 'none', color: 'inherit' }}\n        >\n          <h3 style={{ marginBottom: rhythm(1 / 4) }}>\n            {node.frontmatter.title}{' '}\n            <p style={{ color: '#bbb', fontSize: rhythm(1 / 2) }}>\n              {node.frontmatter.date}\n            </p>\n          </h3>\n          {node.frontmatter.cover && (\n            <img\n              src={node.frontmatter.cover.publicURL}\n              alt={node.frontmatter.cover.name}\n            />\n          )}\n          <p>{node.excerpt}</p>\n        </Link>\n      </div>\n    ))}\n  </Layout>\n)\n\nexport const query = graphql`\n  query {\n    allMarkdownRemark(sort: { fields: frontmatter___date, order: DESC }) {\n      edges {\n        node {\n          id\n          frontmatter {\n            title\n            cover {\n              name\n              publicURL\n            }\n            date(formatString: \"DD MMMM, YYYY\")\n          }\n          fields {\n            slug\n          }\n          excerpt(truncate: true, pruneLength: 250)\n        }\n      }\n    }\n  }\n`\n\nexport default IndexPage\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nconst StaticQuery = props => (\n  <StaticQueryContext.Consumer>\n    {staticQueryData => {\n      if (\n        props.data ||\n        (staticQueryData[props.query] && staticQueryData[props.query].data)\n      ) {\n        return (props.render || props.children)(\n          props.data ? props.data.data : staticQueryData[props.query].data\n        )\n      } else {\n        return <div>Loading (StaticQuery)</div>\n      }\n    }}\n  </StaticQueryContext.Consumer>\n)\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away,. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n.` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import Typography from 'typography'\nimport githubTheme from 'typography-theme-github'\n\nconst typography = new Typography(githubTheme)\nconst rhythm = typography.rhythm\n\nexport { rhythm }\nexport default typography\n","import React from 'react'\nimport { Link } from 'gatsby'\n\nimport { rhythm } from '../utils/typography'\n\nconst Layout = ({ children }) => (\n  <div\n    style={{\n      margin: '0 auto',\n      maxWidth: 700,\n      padding: rhythm(3 / 4),\n      paddingTop: rhythm(1.5),\n    }}\n  >\n    <header\n      style={{\n        display: 'flex',\n        justifyContent: 'space-between',\n        marginBottom: '1.5rem',\n      }}\n    >\n      <Link to=\"/\">Home</Link>\n      <div style={{ display: 'inline', textAlign: 'right' }}>\n        <a\n          href=\"https://medium.com/@aofleejay/latest\"\n          target=\"_blank\"\n          rel=\"noopener noreferrer\"\n        >\n          Software Engineering\n        </a>\n        <Link to=\"/about/\" style={{ marginLeft: 20 }}>\n          About\n        </Link>\n      </div>\n    </header>\n    {children}\n  </div>\n)\n\nexport default Layout\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\nimport loader from \"./loader\"\n\nconst ProdPageRenderer = ({ location }) => {\n  const pageResources = loader.getResourcesForPathnameSync(location.pathname)\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport Helmet from 'react-helmet'\nimport { StaticQuery, graphql } from 'gatsby'\n\nfunction SEO({ description, lang, meta, keywords, title }) {\n  return (\n    <StaticQuery\n      query={detailsQuery}\n      render={data => {\n        const metaDescription =\n          description || data.site.siteMetadata.description\n        return (\n          <Helmet\n            htmlAttributes={{\n              lang,\n            }}\n            title={title}\n            titleTemplate={`%s - ${data.site.siteMetadata.title}`}\n            defaultTitle={`${data.site.siteMetadata.title} - ${\n              data.site.siteMetadata.description\n            }`}\n            meta={[\n              {\n                name: `description`,\n                content: metaDescription,\n              },\n              {\n                property: `og:title`,\n                content: title,\n              },\n              {\n                property: `og:description`,\n                content: metaDescription,\n              },\n              {\n                property: `og:type`,\n                content: `website`,\n              },\n              {\n                name: `twitter:card`,\n                content: `summary`,\n              },\n              {\n                name: `twitter:creator`,\n                content: data.site.siteMetadata.author,\n              },\n              {\n                name: `twitter:title`,\n                content: title,\n              },\n              {\n                name: `twitter:description`,\n                content: metaDescription,\n              },\n            ]\n              .concat(\n                keywords.length > 0\n                  ? {\n                      name: `keywords`,\n                      content: keywords.join(`, `),\n                    }\n                  : []\n              )\n              .concat(meta)}\n          />\n        )\n      }}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  description: undefined,\n  lang: `th`,\n  meta: [],\n  keywords: [],\n  title: undefined,\n}\n\nSEO.propTypes = {\n  description: PropTypes.string,\n  lang: PropTypes.string,\n  meta: PropTypes.array,\n  keywords: PropTypes.arrayOf(PropTypes.string),\n  title: PropTypes.string,\n}\n\nexport default SEO\n\nconst detailsQuery = graphql`\n  query DefaultSEOQuery {\n    site {\n      siteMetadata {\n        title\n        description\n        author\n      }\n    }\n  }\n`\n","var dP = require('./_object-dp').f;\nvar FProto = Function.prototype;\nvar nameRE = /^\\s*function ([^ (]*)/;\nvar NAME = 'name';\n\n// 19.2.4.2 name\nNAME in FProto || require('./_descriptors') && dP(FProto, NAME, {\n  configurable: true,\n  get: function () {\n    try {\n      return ('' + this).match(nameRE)[1];\n    } catch (e) {\n      return '';\n    }\n  }\n});\n"],"sourceRoot":""}