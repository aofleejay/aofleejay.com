{"version":3,"sources":["webpack:///./src/templates/tags.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./src/utils/typography.js","webpack:///./src/components/layout.tsx","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/seo.tsx"],"names":["query","TagsPage","_ref","data","Object","_emotion_core__WEBPACK_IMPORTED_MODULE_1__","_components_layout__WEBPACK_IMPORTED_MODULE_5__","_components_seo__WEBPACK_IMPORTED_MODULE_6__","allMarkdownRemark","edges","map","_ref2","node","key","id","gatsby__WEBPACK_IMPORTED_MODULE_3__","to","fields","slug","style","textDecoration","color","marginBottom","rhythm","frontmatter","title","fontSize","date","tags","tag","marginRight","cover","src","publicURL","alt","name","excerpt","StaticQueryContext","React","createContext","StaticQueryDataRenderer","staticQueryData","render","finalData","_emotion_core__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_1___default","a","Fragment","StaticQuery","props","children","Consumer","propTypes","PropTypes","object","string","isRequired","func","m","module","exports","require","default","__webpack_require__","d","__webpack_exports__","typography__WEBPACK_IMPORTED_MODULE_0__","systemFontStack","typography","n","Typography","headerFontFamily","bodyFontFamily","initialTheme","useContext","themeContext","_useState","useState","theme","setTheme","css","themeColor","secondary","gatsby__WEBPACK_IMPORTED_MODULE_2__","primary","href","target","rel","onClick","newTheme","localStorage","setItem","ProdPageRenderer","location","pageResources","createElement","InternalPageRenderer","assign","json","shape","pathname","SEO","gatsby__WEBPACK_IMPORTED_MODULE_4__","site","siteMetadata","description","author","keywords","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","content","join","property","siteUrl","article","image","facebookAppID","_public_static_d_1964596324_json__WEBPACK_IMPORTED_MODULE_1__","defaultProps"],"mappings":"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","file":"component---src-templates-tags-js-c49d7986c3803a01619b.js","sourcesContent":["import React from 'react'\nimport { Link, graphql } from 'gatsby'\n\nimport { rhythm } from '../utils/typography'\nimport Layout from '../components/layout'\nimport SEO from '../components/seo'\n\nconst TagsPage = ({ data }) => {\n  return (\n    <Layout>\n      <SEO />\n      {data.allMarkdownRemark.edges.map(({ node }) => (\n        <div key={node.id}>\n          <Link\n            to={node.fields.slug}\n            style={{ textDecoration: 'none', color: 'inherit' }}\n          >\n            <h3 style={{ marginBottom: rhythm(1 / 4) }}>\n              {node.frontmatter.title}{' '}\n              <p style={{ color: '#bbb', fontSize: rhythm(1 / 2) }}>\n                {node.frontmatter.date}\n              </p>\n              {node.frontmatter.tags.map(tag => (\n                <Link\n                  to={`/tags/${tag}`}\n                  style={{ textDecoration: 'none', color: 'inherit' }}\n                >\n                  <span\n                    style={{\n                      marginRight: 5,\n                      color: '#bbb',\n                      fontSize: rhythm(1 / 2),\n                    }}\n                  >\n                    {tag}\n                  </span>\n                </Link>\n              ))}\n            </h3>\n            {node.frontmatter.cover && (\n              <img\n                src={node.frontmatter.cover.publicURL}\n                alt={node.frontmatter.cover.name}\n              />\n            )}\n            <p>{node.excerpt}</p>\n          </Link>\n        </div>\n      ))}\n    </Layout>\n  )\n}\n\nexport const query = graphql`\n  query($tag: String!) {\n    allMarkdownRemark(\n      sort: { fields: [frontmatter___date], order: DESC }\n      filter: { frontmatter: { tags: { in: [$tag] } } }\n    ) {\n      edges {\n        node {\n          id\n          frontmatter {\n            title\n            cover {\n              name\n              publicURL\n            }\n            date(formatString: \"DD MMMM, YYYY\")\n            tags\n          }\n          fields {\n            slug\n          }\n          excerpt(truncate: true, pruneLength: 250)\n        }\n      }\n    }\n  }\n`\n\nexport default TagsPage\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nfunction StaticQueryDataRenderer({ staticQueryData, data, query, render }) {\n  const finalData = data\n    ? data.data\n    : staticQueryData[query] && staticQueryData[query].data\n\n  return (\n    <React.Fragment>\n      {finalData && render(finalData)}\n      {!finalData && <div>Loading (StaticQuery)</div>}\n    </React.Fragment>\n  )\n}\n\nconst StaticQuery = props => {\n  const { data, query, render, children } = props\n\n  return (\n    <StaticQueryContext.Consumer>\n      {staticQueryData => (\n        <StaticQueryDataRenderer\n          data={data}\n          query={query}\n          render={render || children}\n          staticQueryData={staticQueryData}\n        />\n      )}\n    </StaticQueryContext.Consumer>\n  )\n}\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import Typography from 'typography'\n\nconst systemFontStack = [\n  '-apple-system',\n  'BlinkMacSystemFont',\n  'Segoe UI',\n  'Roboto',\n  'Oxygen-Sans',\n  'Ubuntu',\n  'Cantarell',\n  'Helvetica Neue',\n  'Helvetica',\n  'Arial',\n  'sans-serif',\n]\n\nconst typography = new Typography({\n  headerFontFamily: systemFontStack,\n  bodyFontFamily: systemFontStack,\n})\n\nexport default typography\nexport const rhythm = typography.rhythm\n","import React, { useContext, useState } from 'react'\nimport { css } from '@emotion/core'\nimport { Link } from 'gatsby'\n\nimport { rhythm } from '../utils/typography'\nimport themeContext, { themeColor } from '../context/theme'\n\nexport default ({ children }) => {\n  const initialTheme = useContext(themeContext)\n  const [theme, setTheme] = useState(initialTheme)\n\n  const changeTheme = () => {\n    const newTheme = theme === 'dark' ? 'light' : 'dark'\n    setTheme(newTheme)\n    localStorage.setItem('theme', newTheme)\n  }\n\n  return (\n    <>\n      <div\n        css={css`\n          background-color: ${themeColor[theme].secondary};\n        `}\n      >\n        <div\n          css={css`\n            margin: 0 auto;\n            max-width: 700px;\n            padding: ${rhythm(1)};\n          `}\n        >\n          <Link\n            css={css`\n              color: ${themeColor[theme].primary};\n              text-decoration: none;\n            `}\n            to={`/`}\n          >\n            HOME\n          </Link>\n          <div\n            css={css`\n              float: right;\n\n              @media only screen and (max-width: 320px) {\n                float: none;\n              }\n            `}\n          >\n            <a\n              css={css`\n                color: ${themeColor[theme].primary};\n                text-decoration: none;\n              `}\n              href=\"https://medium.com/@aofleejay/latest\"\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n            >\n              SOFTWARE DEVELOPMENT\n            </a>\n            <span\n              css={css`\n                padding: 0 ${rhythm(0.5)};\n                color: ${themeColor[theme].primary};\n              `}\n            >\n              |\n            </span>\n            <Link\n              to={`/about/`}\n              css={css`\n                color: ${themeColor[theme].primary};\n                text-decoration: none;\n              `}\n            >\n              ABOUT\n            </Link>\n            <span\n              css={css`\n                padding: 0 ${rhythm(0.5)};\n                color: ${themeColor[theme].primary};\n              `}\n            >\n              |\n            </span>\n            <span\n              css={css`\n                color: ${themeColor[theme].primary};\n                text-decoration: none;\n                cursor: pointer;\n              `}\n              onClick={changeTheme}\n            >\n              CHANGE THEME\n            </span>\n          </div>\n        </div>\n      </div>\n      <div\n        css={css`\n          color: ${themeColor[theme].secondary};\n          background-color: ${themeColor[theme].primary};\n        `}\n      >\n        <div\n          css={css`\n            margin: 0 auto;\n            max-width: 700px;\n            padding: ${rhythm(2)} ${rhythm(1)};\n          `}\n        >\n          {children}\n        </div>\n      </div>\n    </>\n  )\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\n\nconst ProdPageRenderer = ({ location, pageResources }) => {\n  if (!pageResources) {\n    return null\n  }\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import React from 'react'\nimport Helmet from 'react-helmet'\nimport { StaticQuery, graphql } from 'gatsby'\n\ninterface SEOProps {\n  title: string\n  description: string\n  author: string\n  keywords: string[]\n  image: string\n  article: boolean\n  slug: string\n}\n\nconst SEO = (props: SEOProps) => {\n  return (\n    <StaticQuery\n      query={query}\n      render={data => {\n        const title = props.title || data.site.siteMetadata.description\n        const description =\n          props.description || data.site.siteMetadata.description\n        const author = props.author || data.site.siteMetadata.author\n        const keywords = props.keywords || data.site.siteMetadata.keywords\n        const slug = props.slug || '/'\n\n        return (\n          <Helmet title={`${title} - ${data.site.siteMetadata.title}`}>\n            <meta name=\"description\" content={description} />\n            <meta name=\"author\" content={author} />\n            <meta name=\"keywords\" content={keywords.join()} />\n\n            <meta\n              property=\"og:url\"\n              content={`${data.site.siteMetadata.siteUrl}${slug}`}\n            />\n            <meta property=\"og:title\" content={title} />\n            <meta property=\"og:description\" content={description} />\n            {props.article && <meta property=\"og:type\" content=\"article\" />}\n            {props.image && (\n              <meta\n                property=\"og:image\"\n                content={`${data.site.siteMetadata.siteUrl}${props.image}`}\n              />\n            )}\n            <meta property=\"og:locale\" content=\"th_TH\" />\n            <meta\n              property=\"fb:app_id\"\n              content={data.site.siteMetadata.facebookAppID}\n            />\n          </Helmet>\n        )\n      }}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  title: null,\n  description: null,\n  author: null,\n  keywords: null,\n  image: null,\n  article: false,\n  slug: null,\n}\n\nexport const query = graphql`\n  query getSiteMetadata {\n    site {\n      siteMetadata {\n        title\n        description\n        author\n        keywords\n        siteUrl\n        facebookAppID\n      }\n    }\n  }\n`\n\nexport default SEO\n"],"sourceRoot":""}