{"version":3,"sources":["webpack:///./src/templates/tags.js","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./src/utils/typography.js","webpack:///./src/components/layout.tsx","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/assets/moon.svg","webpack:///./src/assets/cloudy.svg","webpack:///./src/components/seo.tsx","webpack:///./src/components/BlogCard.tsx"],"names":["query","TagsPage","_ref","data","Object","_emotion_core__WEBPACK_IMPORTED_MODULE_0__","_components_layout__WEBPACK_IMPORTED_MODULE_2__","_components_seo__WEBPACK_IMPORTED_MODULE_3__","allMarkdownRemark","edges","map","_ref2","node","_components_BlogCard__WEBPACK_IMPORTED_MODULE_4__","post","StaticQueryContext","React","createContext","StaticQueryDataRenderer","staticQueryData","render","finalData","react__WEBPACK_IMPORTED_MODULE_1___default","a","Fragment","StaticQuery","props","children","Consumer","propTypes","PropTypes","object","string","isRequired","func","m","module","exports","require","default","__webpack_require__","d","__webpack_exports__","rhythm","typography__WEBPACK_IMPORTED_MODULE_0__","systemFontStack","typography","n","Typography","headerFontFamily","bodyFontFamily","_ref5","gatsby_plugin_dark_mode__WEBPACK_IMPORTED_MODULE_3__","_ref6","theme","toggleTheme","css","gatsby__WEBPACK_IMPORTED_MODULE_2__","to","href","target","rel","_ref3","src","sun","moon","_ref4","onClick","ProdPageRenderer","location","pageResources","createElement","InternalPageRenderer","assign","json","shape","pathname","p","SEO","gatsby__WEBPACK_IMPORTED_MODULE_4__","title","site","siteMetadata","description","author","keywords","slug","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","name","content","join","property","siteUrl","article","image","facebookAppID","_public_static_d_1964596324_json__WEBPACK_IMPORTED_MODULE_1__","defaultProps","BlogCard","_emotion_core__WEBPACK_IMPORTED_MODULE_1__","key","id","gatsby__WEBPACK_IMPORTED_MODULE_3__","fields","frontmatter","date","tags","tag","cover","publicURL","alt","excerpt"],"mappings":"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","file":"component---src-templates-tags-js-1d213c87391fe89c3b6c.js","sourcesContent":["import React from 'react'\nimport { graphql } from 'gatsby'\n\nimport Layout from '../components/layout'\nimport SEO from '../components/seo'\nimport BlogCard from '../components/BlogCard'\n\nconst TagsPage = ({ data }) => {\n  return (\n    <Layout>\n      <SEO />\n      {data.allMarkdownRemark.edges.map(({ node }) => (\n        <BlogCard post={node} />\n      ))}\n    </Layout>\n  )\n}\n\nexport const query = graphql`\n  query($tag: String!, $skip: Int!, $limit: Int!) {\n    allMarkdownRemark(\n      sort: { fields: [frontmatter___date], order: DESC }\n      filter: { frontmatter: { tags: { in: [$tag] } } }\n      limit: $limit\n      skip: $skip\n    ) {\n      edges {\n        node {\n          id\n          frontmatter {\n            title\n            cover {\n              name\n              publicURL\n            }\n            date(formatString: \"DD MMMM, YYYY\")\n            tags\n          }\n          fields {\n            slug\n          }\n          excerpt(truncate: true, pruneLength: 250)\n        }\n      }\n    }\n  }\n`\n\nexport default TagsPage\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nfunction StaticQueryDataRenderer({ staticQueryData, data, query, render }) {\n  const finalData = data\n    ? data.data\n    : staticQueryData[query] && staticQueryData[query].data\n\n  return (\n    <React.Fragment>\n      {finalData && render(finalData)}\n      {!finalData && <div>Loading (StaticQuery)</div>}\n    </React.Fragment>\n  )\n}\n\nconst StaticQuery = props => {\n  const { data, query, render, children } = props\n\n  return (\n    <StaticQueryContext.Consumer>\n      {staticQueryData => (\n        <StaticQueryDataRenderer\n          data={data}\n          query={query}\n          render={render || children}\n          staticQueryData={staticQueryData}\n        />\n      )}\n    </StaticQueryContext.Consumer>\n  )\n}\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import Typography from 'typography'\n\nconst systemFontStack = [\n  '-apple-system',\n  'BlinkMacSystemFont',\n  'Segoe UI',\n  'Roboto',\n  'Oxygen-Sans',\n  'Ubuntu',\n  'Cantarell',\n  'Helvetica Neue',\n  'Helvetica',\n  'Arial',\n  'sans-serif',\n]\n\nconst typography = new Typography({\n  headerFontFamily: systemFontStack,\n  bodyFontFamily: systemFontStack,\n})\n\nexport default typography\nexport const rhythm = typography.rhythm\n","import React from 'react'\nimport { css } from '@emotion/core'\nimport { Link } from 'gatsby'\nimport { ThemeToggler } from 'gatsby-plugin-dark-mode'\n\nimport { rhythm } from '../utils/typography'\nimport moon from '../assets/moon.svg'\nimport sun from '../assets/cloudy.svg'\n\nexport default ({ children }) => {\n  return (\n    <ThemeToggler>\n      {({ theme, toggleTheme }) => {\n        return (\n          <>\n            <div css={css``}>\n              <div\n                css={css`\n                  margin: 0 auto;\n                  max-width: 700px;\n                  padding: ${rhythm(1)};\n                `}\n              >\n                <Link\n                  css={css`\n                    text-decoration: none;\n                  `}\n                  to={`/`}\n                >\n                  HOME\n                </Link>\n                <span\n                  css={css`\n                    padding: 0 ${rhythm(0.5)};\n                  `}\n                >\n                  |\n                </span>\n                <a\n                  css={css`\n                    text-decoration: none;\n                  `}\n                  href=\"https://medium.com/@aofleejay/latest\"\n                  target=\"_blank\"\n                  rel=\"noopener noreferrer\"\n                >\n                  SOFTWARE DEVELOPMENT\n                </a>\n                <span\n                  css={css`\n                    padding: 0 ${rhythm(0.5)};\n                  `}\n                >\n                  |\n                </span>\n                <Link\n                  to={`/about/`}\n                  css={css`\n                    text-decoration: none;\n                  `}\n                >\n                  ABOUT\n                </Link>\n                <span\n                  css={css`\n                    padding: 0 ${rhythm(0.5)};\n                  `}\n                >\n                  |\n                </span>\n                <img\n                  src={theme === 'dark' ? sun : moon}\n                  css={css`\n                    display: inline-block;\n                    cursor: pointer;\n                    width: 25px;\n                    vertical-align: bottom;\n                    margin-bottom: 0;\n                  `}\n                  onClick={() =>\n                    toggleTheme(theme === 'dark' ? 'light' : 'dark')\n                  }\n                />\n              </div>\n            </div>\n            <div css={css``}>\n              <div\n                css={css`\n                  margin: 0 auto;\n                  max-width: 700px;\n                  padding: ${rhythm(2)} ${rhythm(1)};\n                `}\n              >\n                {children}\n              </div>\n            </div>\n          </>\n        )\n      }}\n    </ThemeToggler>\n  )\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\n\nconst ProdPageRenderer = ({ location, pageResources }) => {\n  if (!pageResources) {\n    return null\n  }\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","module.exports = __webpack_public_path__ + \"static/moon-e69b44d409556483a5b36e82531126ec.svg\";","module.exports = __webpack_public_path__ + \"static/cloudy-1259b6d43da52a09b23caf706893e3f8.svg\";","import React from 'react'\nimport Helmet from 'react-helmet'\nimport { StaticQuery, graphql } from 'gatsby'\n\ninterface SEOProps {\n  title: string\n  description: string\n  author: string\n  keywords: string[]\n  image: string\n  article: boolean\n  slug: string\n}\n\nconst SEO = (props: SEOProps) => {\n  return (\n    <StaticQuery\n      query={query}\n      render={data => {\n        const title = props.title || data.site.siteMetadata.description\n        const description =\n          props.description || data.site.siteMetadata.description\n        const author = props.author || data.site.siteMetadata.author\n        const keywords = props.keywords || data.site.siteMetadata.keywords\n        const slug = props.slug || '/'\n\n        return (\n          <Helmet title={`${title} - ${data.site.siteMetadata.title}`}>\n            <meta name=\"description\" content={description} />\n            <meta name=\"author\" content={author} />\n            <meta name=\"keywords\" content={keywords.join()} />\n\n            <meta\n              property=\"og:url\"\n              content={`${data.site.siteMetadata.siteUrl}${slug}`}\n            />\n            <meta property=\"og:title\" content={title} />\n            <meta property=\"og:description\" content={description} />\n            {props.article && <meta property=\"og:type\" content=\"article\" />}\n            {props.image && (\n              <meta\n                property=\"og:image\"\n                content={`${data.site.siteMetadata.siteUrl}${props.image}`}\n              />\n            )}\n            <meta property=\"og:locale\" content=\"th_TH\" />\n            <meta\n              property=\"fb:app_id\"\n              content={data.site.siteMetadata.facebookAppID}\n            />\n          </Helmet>\n        )\n      }}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  title: null,\n  description: null,\n  author: null,\n  keywords: null,\n  image: null,\n  article: false,\n  slug: null,\n}\n\nexport const query = graphql`\n  query getSiteMetadata {\n    site {\n      siteMetadata {\n        title\n        description\n        author\n        keywords\n        siteUrl\n        facebookAppID\n      }\n    }\n  }\n`\n\nexport default SEO\n","import React from 'react'\nimport { css } from '@emotion/core'\nimport { Link } from 'gatsby'\n\nimport { rhythm } from '../utils/typography'\n\nconst BlogCard = ({ post }) => {\n  return (\n    <div\n      key={post.id}\n      css={css`\n        margin-bottom: ${rhythm(2)};\n      `}\n    >\n      <Link\n        css={css`\n          text-decoration: none;\n          color: inherit;\n        `}\n        to={post.fields.slug}\n      >\n        <h1\n          css={css`\n            margin-bottom: ${rhythm(1 / 2)};\n          `}\n        >\n          {post.frontmatter.title}\n        </h1>\n      </Link>\n      <p\n        css={css`\n          color: #bbb;\n        `}\n      >\n        {post.frontmatter.date}\n        <span\n          css={css`\n            padding: 0 ${rhythm(1 / 2)};\n          `}\n        >\n          |\n        </span>\n        {post.frontmatter.tags.map(tag => (\n          <Link\n            key={tag}\n            to={`/tags/${tag}`}\n            css={css`\n              text-decoration: none;\n              color: inherit;\n            `}\n          >\n            <span>{tag}</span>\n          </Link>\n        ))}\n      </p>\n      <Link\n        css={css`\n          text-decoration: none;\n          color: inherit;\n        `}\n        to={post.fields.slug}\n      >\n        {post.frontmatter.cover && (\n          <img\n            src={post.frontmatter.cover.publicURL}\n            alt={post.frontmatter.cover.name}\n          />\n        )}\n        <p>{post.excerpt}</p>\n      </Link>\n    </div>\n  )\n}\n\nexport default BlogCard\n"],"sourceRoot":""}