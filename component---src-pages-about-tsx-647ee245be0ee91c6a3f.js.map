{"version":3,"sources":["webpack:///./src/pages/about.tsx","webpack:///./.cache/gatsby-browser-entry.js","webpack:///./.cache/public-page-renderer.js","webpack:///./src/utils/typography.js","webpack:///./src/components/layout.tsx","webpack:///./.cache/public-page-renderer-prod.js","webpack:///./src/components/seo.tsx"],"names":["About","Object","_emotion_core__WEBPACK_IMPORTED_MODULE_0__","_components_layout__WEBPACK_IMPORTED_MODULE_2__","_components_seo__WEBPACK_IMPORTED_MODULE_3__","role","aria-label","href","StaticQueryContext","React","createContext","StaticQueryDataRenderer","_ref","staticQueryData","data","query","render","finalData","react__WEBPACK_IMPORTED_MODULE_1___default","a","Fragment","StaticQuery","props","children","Consumer","propTypes","PropTypes","object","string","isRequired","func","m","module","exports","require","default","__webpack_require__","d","__webpack_exports__","rhythm","typography__WEBPACK_IMPORTED_MODULE_0__","systemFontStack","typography","n","Typography","headerFontFamily","bodyFontFamily","_ref2","initialTheme","useContext","themeContext","_useState","useState","theme","setTheme","css","themeColor","secondary","gatsby__WEBPACK_IMPORTED_MODULE_2__","primary","to","target","rel","onClick","newTheme","localStorage","setItem","ProdPageRenderer","location","pageResources","createElement","InternalPageRenderer","assign","json","shape","pathname","SEO","gatsby__WEBPACK_IMPORTED_MODULE_4__","title","site","siteMetadata","description","author","keywords","slug","react_helmet__WEBPACK_IMPORTED_MODULE_3___default","name","content","join","property","siteUrl","article","image","facebookAppID","_public_static_d_1964596324_json__WEBPACK_IMPORTED_MODULE_1__","defaultProps"],"mappings":"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","file":"component---src-pages-about-tsx-647ee245be0ee91c6a3f.js","sourcesContent":["import React from 'react'\n\nimport Layout from '../components/layout'\nimport SEO from '../components/seo'\n\nfunction About() {\n  return (\n    <Layout>\n      <SEO />\n      <h1>Kunapot Pairat</h1>\n      <p>\n        <span role=\"img\" aria-label=\"computer\">\n          üíª\n        </span>\n        <span> Software Developer / </span>\n        <span role=\"img\" aria-label=\"runner\">\n          üèÉ\n        </span>\n        <span> Slow Runner / </span>\n        <span role=\"img\" aria-label=\"cat\">\n          üê±\n        </span>\n        <span> Pokemon Trainer / </span>\n        <span role=\"img\" aria-label=\"lovely-cat\">\n          üòª\n        </span>\n        <span> Cat Lover / </span>\n        <span role=\"img\" aria-label=\"guitar\">\n          üé∏\n        </span>\n        <span> Guitar Player </span>\n      </p>\n      <p>\n        Medium -{' '}\n        <a href=\"https://medium.com/@aofleejay\">\n          https://medium.com/@aofleejay\n        </a>\n      </p>\n      <p>\n        GitHub -{' '}\n        <a href=\"https://github.com/aofleejay\">https://github.com/aofleejay</a>\n      </p>\n    </Layout>\n  )\n}\n\nexport default About\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\nimport Link, {\n  withPrefix,\n  withAssetPrefix,\n  navigate,\n  push,\n  replace,\n  navigateTo,\n  parsePath,\n} from \"gatsby-link\"\nimport PageRenderer from \"./public-page-renderer\"\n\nconst StaticQueryContext = React.createContext({})\n\nfunction StaticQueryDataRenderer({ staticQueryData, data, query, render }) {\n  const finalData = data\n    ? data.data\n    : staticQueryData[query] && staticQueryData[query].data\n\n  return (\n    <React.Fragment>\n      {finalData && render(finalData)}\n      {!finalData && <div>Loading (StaticQuery)</div>}\n    </React.Fragment>\n  )\n}\n\nconst StaticQuery = props => {\n  const { data, query, render, children } = props\n\n  return (\n    <StaticQueryContext.Consumer>\n      {staticQueryData => (\n        <StaticQueryDataRenderer\n          data={data}\n          query={query}\n          render={render || children}\n          staticQueryData={staticQueryData}\n        />\n      )}\n    </StaticQueryContext.Consumer>\n  )\n}\n\nconst useStaticQuery = query => {\n  if (\n    typeof React.useContext !== `function` &&\n    process.env.NODE_ENV === `development`\n  ) {\n    throw new Error(\n      `You're likely using a version of React that doesn't support Hooks\\n` +\n        `Please update React and ReactDOM to 16.8.0 or later to use the useStaticQuery hook.`\n    )\n  }\n  const context = React.useContext(StaticQueryContext)\n  if (context[query] && context[query].data) {\n    return context[query].data\n  } else {\n    throw new Error(\n      `The result of this StaticQuery could not be fetched.\\n\\n` +\n        `This is likely a bug in Gatsby and if refreshing the page does not fix it, ` +\n        `please open an issue in https://github.com/gatsbyjs/gatsby/issues`\n    )\n  }\n}\n\nStaticQuery.propTypes = {\n  data: PropTypes.object,\n  query: PropTypes.string.isRequired,\n  render: PropTypes.func,\n  children: PropTypes.func,\n}\n\nfunction graphql() {\n  throw new Error(\n    `It appears like Gatsby is misconfigured. Gatsby related \\`graphql\\` calls ` +\n      `are supposed to only be evaluated at compile time, and then compiled away. ` +\n      `Unfortunately, something went wrong and the query was left in the compiled code.\\n\\n` +\n      `Unless your site has a complex or custom babel/Gatsby configuration this is likely a bug in Gatsby.`\n  )\n}\n\nexport {\n  Link,\n  withAssetPrefix,\n  withPrefix,\n  graphql,\n  parsePath,\n  navigate,\n  push, // TODO replace for v3\n  replace, // TODO remove replace for v3\n  navigateTo, // TODO: remove navigateTo for v3\n  StaticQueryContext,\n  StaticQuery,\n  PageRenderer,\n  useStaticQuery,\n}\n","const preferDefault = m => (m && m.default) || m\n\nif (process.env.BUILD_STAGE === `develop`) {\n  module.exports = preferDefault(require(`./public-page-renderer-dev`))\n} else if (process.env.BUILD_STAGE === `build-javascript`) {\n  module.exports = preferDefault(require(`./public-page-renderer-prod`))\n} else {\n  module.exports = () => null\n}\n","import Typography from 'typography'\n\nconst systemFontStack = [\n  '-apple-system',\n  'BlinkMacSystemFont',\n  'Segoe UI',\n  'Roboto',\n  'Oxygen-Sans',\n  'Ubuntu',\n  'Cantarell',\n  'Helvetica Neue',\n  'Helvetica',\n  'Arial',\n  'sans-serif',\n]\n\nconst typography = new Typography({\n  headerFontFamily: systemFontStack,\n  bodyFontFamily: systemFontStack,\n})\n\nexport default typography\nexport const rhythm = typography.rhythm\n","import React, { useContext, useState } from 'react'\nimport { css } from '@emotion/core'\nimport { Link } from 'gatsby'\n\nimport { rhythm } from '../utils/typography'\nimport themeContext, { themeColor } from '../context/theme'\n\nexport default ({ children }) => {\n  const initialTheme = useContext(themeContext)\n  const [theme, setTheme] = useState(initialTheme)\n\n  const changeTheme = () => {\n    const newTheme = theme === 'dark' ? 'light' : 'dark'\n    setTheme(newTheme)\n    localStorage.setItem('theme', newTheme)\n  }\n\n  return (\n    <>\n      <div\n        css={css`\n          background-color: ${themeColor[theme].secondary};\n        `}\n      >\n        <div\n          css={css`\n            margin: 0 auto;\n            max-width: 700px;\n            padding: ${rhythm(1)};\n          `}\n        >\n          <Link\n            css={css`\n              color: ${themeColor[theme].primary};\n              text-decoration: none;\n            `}\n            to={`/`}\n          >\n            HOME\n          </Link>\n          <div\n            css={css`\n              float: right;\n\n              @media only screen and (max-width: 320px) {\n                float: none;\n              }\n            `}\n          >\n            <a\n              css={css`\n                color: ${themeColor[theme].primary};\n                text-decoration: none;\n              `}\n              href=\"https://medium.com/@aofleejay/latest\"\n              target=\"_blank\"\n              rel=\"noopener noreferrer\"\n            >\n              SOFTWARE DEVELOPMENT\n            </a>\n            <span\n              css={css`\n                padding: 0 ${rhythm(0.5)};\n                color: ${themeColor[theme].primary};\n              `}\n            >\n              |\n            </span>\n            <Link\n              to={`/about/`}\n              css={css`\n                color: ${themeColor[theme].primary};\n                text-decoration: none;\n              `}\n            >\n              ABOUT\n            </Link>\n            <span\n              css={css`\n                padding: 0 ${rhythm(0.5)};\n                color: ${themeColor[theme].primary};\n              `}\n            >\n              |\n            </span>\n            <span\n              css={css`\n                color: ${themeColor[theme].primary};\n                text-decoration: none;\n                cursor: pointer;\n              `}\n              onClick={changeTheme}\n            >\n              CHANGE THEME\n            </span>\n          </div>\n        </div>\n      </div>\n      <div\n        css={css`\n          color: ${themeColor[theme].secondary};\n          background-color: ${themeColor[theme].primary};\n        `}\n      >\n        <div\n          css={css`\n            margin: 0 auto;\n            max-width: 700px;\n            padding: ${rhythm(2)} ${rhythm(1)};\n          `}\n        >\n          {children}\n        </div>\n      </div>\n    </>\n  )\n}\n","import React from \"react\"\nimport PropTypes from \"prop-types\"\n\nimport InternalPageRenderer from \"./page-renderer\"\n\nconst ProdPageRenderer = ({ location, pageResources }) => {\n  if (!pageResources) {\n    return null\n  }\n  return React.createElement(InternalPageRenderer, {\n    location,\n    pageResources,\n    ...pageResources.json,\n  })\n}\n\nProdPageRenderer.propTypes = {\n  location: PropTypes.shape({\n    pathname: PropTypes.string.isRequired,\n  }).isRequired,\n}\n\nexport default ProdPageRenderer\n","import React from 'react'\nimport Helmet from 'react-helmet'\nimport { StaticQuery, graphql } from 'gatsby'\n\ninterface SEOProps {\n  title: string\n  description: string\n  author: string\n  keywords: string[]\n  image: string\n  article: boolean\n  slug: string\n}\n\nconst SEO = (props: SEOProps) => {\n  return (\n    <StaticQuery\n      query={query}\n      render={data => {\n        const title = props.title || data.site.siteMetadata.description\n        const description =\n          props.description || data.site.siteMetadata.description\n        const author = props.author || data.site.siteMetadata.author\n        const keywords = props.keywords || data.site.siteMetadata.keywords\n        const slug = props.slug || '/'\n\n        return (\n          <Helmet title={`${title} - ${data.site.siteMetadata.title}`}>\n            <meta name=\"description\" content={description} />\n            <meta name=\"author\" content={author} />\n            <meta name=\"keywords\" content={keywords.join()} />\n\n            <meta\n              property=\"og:url\"\n              content={`${data.site.siteMetadata.siteUrl}${slug}`}\n            />\n            <meta property=\"og:title\" content={title} />\n            <meta property=\"og:description\" content={description} />\n            {props.article && <meta property=\"og:type\" content=\"article\" />}\n            {props.image && (\n              <meta\n                property=\"og:image\"\n                content={`${data.site.siteMetadata.siteUrl}${props.image}`}\n              />\n            )}\n            <meta property=\"og:locale\" content=\"th_TH\" />\n            <meta\n              property=\"fb:app_id\"\n              content={data.site.siteMetadata.facebookAppID}\n            />\n          </Helmet>\n        )\n      }}\n    />\n  )\n}\n\nSEO.defaultProps = {\n  title: null,\n  description: null,\n  author: null,\n  keywords: null,\n  image: null,\n  article: false,\n  slug: null,\n}\n\nexport const query = graphql`\n  query getSiteMetadata {\n    site {\n      siteMetadata {\n        title\n        description\n        author\n        keywords\n        siteUrl\n        facebookAppID\n      }\n    }\n  }\n`\n\nexport default SEO\n"],"sourceRoot":""}