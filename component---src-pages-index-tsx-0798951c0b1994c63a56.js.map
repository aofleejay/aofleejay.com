{"version":3,"sources":["webpack:///./src/assets/default-book-cover.jpg","webpack:///./node_modules/core-js/modules/_string-html.js","webpack:///./src/pages/index.tsx","webpack:///./node_modules/core-js/modules/es6.string.link.js"],"names":["module","exports","$export","fails","defined","quot","createHTML","string","tag","attribute","value","S","String","p1","replace","NAME","exec","O","P","F","test","toLowerCase","split","length","Bio","id","css","query","IndexPage","props","key","initialValue","setValue","useState","storedValue","window","localStorage","getItem","JSON","parse","error","newValue","setItem","stringify","console","log","activeMenu","setActiveMenu","isActive","onClick","data","mediumBlogs","nodes","map","blog","href","link","target","rel","title","date","src","thumbnail","alt","games","edges","node","to","fields","slug","frontmatter","coverImage","publicURL","defaultCoverImage","books","bookCover","defaultBookCover","url","this"],"mappings":"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","file":"component---src-pages-index-tsx-0798951c0b1994c63a56.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/default-book-cover-20c66463399e43536cbd7b6831cdeabe.jpg\";","var $export = require('./_export');\nvar fails = require('./_fails');\nvar defined = require('./_defined');\nvar quot = /\"/g;\n// B.2.3.2.1 CreateHTML(string, tag, attribute, value)\nvar createHTML = function (string, tag, attribute, value) {\n  var S = String(defined(string));\n  var p1 = '<' + tag;\n  if (attribute !== '') p1 += ' ' + attribute + '=\"' + String(value).replace(quot, '&quot;') + '\"';\n  return p1 + '>' + S + '</' + tag + '>';\n};\nmodule.exports = function (NAME, exec) {\n  var O = {};\n  O[NAME] = exec(createHTML);\n  $export($export.P + $export.F * fails(function () {\n    var test = ''[NAME]('\"');\n    return test !== test.toLowerCase() || test.split('\"').length > 3;\n  }), 'String', O);\n};\n","import { graphql, Link } from 'gatsby'\nimport React, { useState } from 'react'\nimport { css } from '@emotion/core'\nimport { Menu, MenuItem, SEO, Layout } from '../components'\nimport defaultCoverImage from '../assets/default-cover-image.jpg'\nimport defaultBookCover from '../assets/default-book-cover.jpg'\n\ninterface AllMarkdownProps {\n  data: {\n    books: {\n      edges: [\n        {\n          node: {\n            id: string\n            frontmatter: {\n              title: string\n              bookCover: {\n                name: string\n                publicURL: string\n              }\n              date: Date\n              tags: [string]\n            }\n            fields: {\n              slug: string\n            }\n            excerpt: string\n          }\n        },\n      ]\n    }\n    games: {\n      edges: [\n        {\n          node: {\n            id: string\n            frontmatter: {\n              title: string\n              coverImage: {\n                name: string\n                publicURL: string\n              }\n              date: Date\n              tags: [string]\n            }\n            fields: {\n              slug: string\n            }\n            excerpt: string\n          }\n        },\n      ]\n    }\n    mediumBlogs: {\n      nodes: [\n        {\n          id: string\n          date: string\n          title: string\n          link: string\n          thumbnail: string\n        },\n      ]\n    }\n    site: {\n      siteMetadata: {\n        social: {\n          medium: string\n        }\n      }\n    }\n  }\n}\n\nconst Bio: React.FC = () => {\n  return (\n    <section\n      id=\"bio\"\n      css={css`\n        text-align: center;\n      `}\n    >\n      <h1>aofleejay</h1>\n      <p>Just another blog</p>\n    </section>\n  )\n}\n\nfunction useLocalStorage<V>(\n  key: string,\n  initialValue: V,\n): [V, (newValue: V) => void] {\n  const [value, setValue] = useState(() => {\n    try {\n      const storedValue = window.localStorage.getItem(key)\n      return storedValue ? JSON.parse(storedValue) : initialValue\n    } catch (error) {\n      return initialValue\n    }\n  })\n\n  const updateValue = (newValue: V): void => {\n    try {\n      setValue(newValue)\n      window.localStorage.setItem(key, JSON.stringify(newValue))\n    } catch (error) {\n      console.log(error)\n    }\n  }\n\n  return [value, updateValue]\n}\n\nconst IndexPage: React.FC<AllMarkdownProps> = props => {\n  const [activeMenu, setActiveMenu] = useLocalStorage('tab', 'coding')\n  return (\n    <Layout>\n      <SEO />\n      <Bio />\n      <Menu>\n        <MenuItem\n          isActive={activeMenu === 'coding'}\n          onClick={() => setActiveMenu('coding')}\n        >\n          CODING\n        </MenuItem>\n        <MenuItem\n          isActive={activeMenu === 'book'}\n          onClick={() => setActiveMenu('book')}\n        >\n          BOOK\n        </MenuItem>\n        <MenuItem\n          isActive={activeMenu === 'game'}\n          onClick={() => setActiveMenu('game')}\n        >\n          GAME\n        </MenuItem>\n      </Menu>\n      <section id=\"content\">\n        {activeMenu === 'coding' &&\n          props.data.mediumBlogs.nodes.map(blog => {\n            return (\n              <a\n                key={blog.id}\n                href={blog.link}\n                target=\"_blank\"\n                rel=\"noopener noreferrer\"\n                css={css`\n                  text-decoration: none;\n                `}\n              >\n                <p\n                  css={css`\n                    margin-bottom: 0;\n                  `}\n                >\n                  {blog.title}\n                </p>\n                <p\n                  css={css`\n                    font-size: 12px;\n                  `}\n                >\n                  {blog.date}\n                </p>\n                <img src={blog.thumbnail} alt={blog.title} />\n              </a>\n            )\n          })}\n        {activeMenu === 'game' && (\n          <div\n            css={css`\n              display: grid;\n              grid-gap: 10px;\n              grid-template-columns: 1fr 1fr 1fr;\n\n              @media only screen and (max-width: 600px) {\n                grid-template-columns: 1fr 1fr;\n              }\n            `}\n          >\n            {props.data.games.edges.map(({ node }) => {\n              return (\n                <div\n                  key={node.id}\n                  css={css`\n                    width: 100%;\n                  `}\n                >\n                  <Link to={node.fields.slug}>\n                    <img\n                      src={\n                        node.frontmatter.coverImage\n                          ? node.frontmatter.coverImage.publicURL\n                          : defaultCoverImage\n                      }\n                      css={css`\n                        border: 1px darkgrey solid;\n                        margin-bottom: 0;\n                      `}\n                      alt={node.frontmatter.title}\n                    />\n                  </Link>\n                </div>\n              )\n            })}\n          </div>\n        )}\n        {activeMenu === 'book' && (\n          <div\n            css={css`\n              display: grid;\n              grid-gap: 10px;\n              grid-template-columns: 1fr 1fr 1fr 1fr;\n              margin-bottom: 15px;\n\n              @media only screen and (max-width: 600px) {\n                grid-template-columns: 1fr 1fr 1fr;\n              }\n            `}\n          >\n            {props.data.books.edges.map(({ node }) => {\n              return (\n                <div\n                  key={node.id}\n                  css={css`\n                    width: 100%;\n                  `}\n                >\n                  <Link to={node.fields.slug}>\n                    <img\n                      src={\n                        node.frontmatter.bookCover\n                          ? node.frontmatter.bookCover.publicURL\n                          : defaultBookCover\n                      }\n                      css={css`\n                        border: 1px darkgrey solid;\n                        margin-bottom: 0;\n                      `}\n                      alt={node.frontmatter.title}\n                    />\n                  </Link>\n                </div>\n              )\n            })}\n          </div>\n        )}\n      </section>\n    </Layout>\n  )\n}\n\nexport const query = graphql`\n  query {\n    books: allMarkdownRemark(\n      sort: { fields: frontmatter___date, order: DESC }\n      filter: {\n        frontmatter: { tags: { eq: \"เล่าหนังสือ\" }, draft: { ne: true } }\n      }\n    ) {\n      edges {\n        node {\n          id\n          frontmatter {\n            title\n            bookCover {\n              name\n              publicURL\n            }\n            date(formatString: \"DD MMMM, YYYY\")\n            tags\n          }\n          fields {\n            slug\n          }\n          excerpt(truncate: true, pruneLength: 250)\n        }\n      }\n    }\n    games: allMarkdownRemark(\n      sort: { fields: frontmatter___date, order: DESC }\n      filter: { frontmatter: { tags: { eq: \"เล่าเกม\" }, draft: { ne: true } } }\n    ) {\n      edges {\n        node {\n          id\n          frontmatter {\n            title\n            coverImage {\n              name\n              publicURL\n            }\n            date(formatString: \"DD MMMM, YYYY\")\n            tags\n          }\n          fields {\n            slug\n          }\n          excerpt(truncate: true, pruneLength: 250)\n        }\n      }\n    }\n    mediumBlogs: allMediumFeed {\n      nodes {\n        id\n        date(fromNow: true)\n        title\n        link\n        thumbnail\n      }\n    }\n    site {\n      siteMetadata {\n        social {\n          medium\n        }\n      }\n    }\n  }\n`\n\nexport default IndexPage\n","'use strict';\n// B.2.3.10 String.prototype.link(url)\nrequire('./_string-html')('link', function (createHTML) {\n  return function link(url) {\n    return createHTML(this, 'a', 'href', url);\n  };\n});\n"],"sourceRoot":""}